{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\SignUp.vue?vue&type=style&index=0&id=219ee22a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\SignUp.vue","mtime":1622059715814},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojaW5zcGlyZXsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzg2RDFGQzsNCn0NCg=="},{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-app id=\"inspire\">\r\n    <v-main>\r\n      <v-container fluid fill-height>\r\n        <v-col style=\"height:100%;\" cols=\"2\">\r\n      <v-img style=\"height:100%;\r\n                    width: 100%;\" :src=\"require('@/assets/sportvert.jpg')\"> </v-img>\r\n    </v-col>\r\n        <v-layout align-center justify-center>\r\n          <v-flex xs12 sm8 md4>\r\n            <v-card class=\"elevation-12\" style=\"border: 2px solid #1286C7;\">\r\n              <v-card-text>\r\n                <v-form>\r\n                  <div>\r\n                  <v-text-field prepend-icon=\"person\" \r\n                                name=\"name\" \r\n                                label=\"Name\" \r\n                                type=\"text\"\r\n                                v-model=\"name\"\r\n                                :class=\"{ 'is-invalid': submitted && $v.name.$error }\"></v-text-field>\r\n                                <div\r\n          v-if=\"submitted && !$v.name.required\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Name is required.\r\n        </div>\r\n                  </div>\r\n                  <div>\r\n                  <v-text-field prepend-icon=\"person\" \r\n                                name=\"surname\" \r\n                                label=\"Surname\" \r\n                                type=\"text\"\r\n                                v-model=\"surname\"\r\n                                :class=\"{ 'is-invalid': submitted && $v.surname.$error }\"></v-text-field>\r\n                                <div\r\n          v-if=\"submitted && !$v.surname.required\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Surname is required.\r\n        </div>\r\n                  </div>\r\n                  <div>\r\n                  <v-text-field prepend-icon=\"person\" \r\n                                name=\"email\" \r\n                                label=\"Email\" \r\n                                type=\"text\"\r\n                                v-model=\"email\" \r\n                                :class=\"{ 'is-invalid': submitted && $v.email.$error }\"></v-text-field>\r\n                  <div v-if=\"submitted && $v.email.$error\" class=\"invalid-feedback\">\r\n                                    <span v-if=\"!$v.email.required\">Email is required</span>\r\n                                    <span v-if=\"!$v.email.email\">Email is invalid</span>\r\n                                </div>\r\n                  </div>\r\n                  <div>\r\n                  <v-text-field id=\"password\" \r\n                                prepend-icon=\"lock\" \r\n                                name=\"password\" \r\n                                label=\"Password\" \r\n                                type=\"password\"\r\n                                v-model=\"password\"\r\n                                :class=\"{ 'is-invalid': submitted && $v.password.$error }\"\r\n                                ></v-text-field>\r\n                                <div v-if=\"submitted && $v.password.$error\" class=\"invalid-feedback\">\r\n                                    <span v-if=\"!$v.password.required\">Password is required</span>\r\n                                    <span v-if=\"!$v.password.minLength\">Password must be at least 6 characters</span>\r\n                                </div>\r\n                  </div>\r\n                  <div>\r\n                  <v-text-field id=\"confirmPassword\" \r\n                                prepend-icon=\"lock\" \r\n                                name=\"confirmPassword\" \r\n                                label=\"Confirm password\" \r\n                                type=\"password\"\r\n                                v-model=\"confirmPassword\"\r\n                                :class=\"{ 'is-invalid': submitted && $v.confirmPassword.$error }\"></v-text-field>\r\n                                <div v-if=\"submitted && $v.confirmPassword.$error\" class=\"invalid-feedback\">\r\n                                    <span v-if=\"!$v.confirmPassword.required\">Confirm Password is required</span>\r\n                                    <span v-else-if=\"!$v.confirmPassword.sameAsPassword\">Passwords must match</span>\r\n                                </div>\r\n                  </div>\r\n                </v-form>\r\n              </v-card-text>\r\n              <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <button @click=\"submit()\" style=\"background-color: white;\r\n                              text-align: center;\r\n                              color: #1286C7;\r\n                              padding: 5px 50px;\r\n                              border: 2px solid #1286C7;\r\n                              box-shadow: 0 3px #1286C7;\">\r\n                              <v-icon\r\n          dark\r\n          left\r\n        >\r\n          mdi-pencil-ruler\r\n        </v-icon>\r\n                              Register</button>\r\n                              <v-spacer></v-spacer>\r\n              </v-card-actions>\r\n            </v-card>\r\n          </v-flex>\r\n        </v-layout>\r\n      </v-container>\r\n    </v-main>\r\n  </v-app>\r\n</template>\r\n<script>\r\nimport {Auth} from '@/services';\r\nimport { required, minLength, email, sameAs } from 'vuelidate/lib/validators'\r\n\r\nexport default {\r\n  data(){\r\n    return {\r\n              \r\n                    name: \"\",\r\n                    surname: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\",\r\n                \r\n                submitted: false\r\n            };\r\n  },\r\n  \r\n  validations: {\r\n        \r\n                name: { required },\r\n                surname: { required },\r\n                email: { required, email },\r\n                password: { required, minLength: minLength(6) },\r\n                confirmPassword: { required, sameAsPassword: sameAs('password') }\r\n          \r\n  },\r\n  methods: {\r\n     async submit() {\r\n                // this.submitted = true;\r\n\r\n                // // stop here if form is invalid\r\n                // this.$v.$touch();\r\n                // if (this.$v.$invalid) {\r\n                //     return;\r\n                // }\r\n                // console.log(\"hhh\");\r\n    \r\n        let success = await Auth.login(this.email, this.password);\r\n        console.log('Rezultat prijave', success);\r\n        if(success == true){\r\n          this.$router.push({path: '/naslovna'})\r\n         if (\r\n        this.password !== this.confirmPassword ||\r\n        this.confirmPassword !== this.password\r\n      ) {\r\n        alert(\"Lozinke se ne podudaraju!\");\r\n        console.log(error);\r\n      }\r\n      let user = {\r\n          name: this.name,\r\n          surname: this.surname,\r\n          email: this.email,\r\n          password: this.password,\r\n          confirmPassword: this.confirmPassword,\r\n      };\r\n       let newuser = await Auth.registracija(user);\r\n        console.log('Registriran je korisnik', newuser.data);\r\n        }\r\n\r\n  },\r\n  }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n#inspire{\r\n  background-color: #86D1FC;\r\n}\r\n</style>"]}]}