{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsButton\\BsButtonToggleField.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsButton\\BsButtonToggleField.vue","mtime":1609651052000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQnNCdXR0b25Ub2dnbGUgZnJvbSAiLi9Cc0J1dHRvblRvZ2dsZSI7DQppbXBvcnQgQnV0dG9uVG9nZ2xlIGZyb20gIi4vbWl4aW5zL0J1dHRvblRvZ2dsZSI7DQppbXBvcnQgRmllbGRWYWxpZGF0aW9uIGZyb20gIi4uL0JzRmllbGQvbWl4aW5zL0ZpZWxkVmFsaWRhdGlvbiI7DQppbXBvcnQgSW5wdXQgZnJvbSAiLi4vLi4vbWl4aW5zL0lucHV0IjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICJCc0J1dHRvblRvZ2dsZUZpZWxkIiwNCiAgICBjb21wb25lbnRzOiB7QnNCdXR0b25Ub2dnbGV9LA0KICAgIG1peGluczogW0lucHV0LCBCdXR0b25Ub2dnbGUsIEZpZWxkVmFsaWRhdGlvbl0sDQogICAgbW9kZWw6IHsNCiAgICAgICAgcHJvcDogJ3ZhbHVlJywNCiAgICAgICAgZXZlbnQ6ICdjaGFuZ2UnDQogICAgfSwNCiAgICBwcm9wczogew0KICAgICAgICAvKioNCiAgICAgICAgICogU2hvdyBwZXJzaXN0ZW50IGhlbHAgdGV4dCBvciBub3QuDQogICAgICAgICAqIEB0eXBlIHtib29sZWFufCp9DQogICAgICAgICAqLw0KICAgICAgICBwZXJzaXN0ZW50SGVscFRleHQ6IHsNCiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICAgICAgICBkZWZhdWx0OiB0cnVlDQogICAgICAgIH0NCiAgICB9LA0KICAgIGRhdGE6ICgpID0+ICh7DQogICAgICAgIGlzRm9jdXNlZDogZmFsc2UNCiAgICB9KSwNCiAgICBjb21wdXRlZDogew0KICAgICAgICAvKioNCiAgICAgICAgICogR2V0IEJ1dHRvblRvZ2dsZSdzIGNvbXB1dGVkIGJpbmRpbmcgcHJvcGVydGllcy4NCiAgICAgICAgICoNCiAgICAgICAgICogQHJldHVybnMge09iamVjdHwqfSBDb21wb25lbnQgYmluZGluZyBwcm9wZXJ0aWVzDQogICAgICAgICAqIEBwcml2YXRlDQogICAgICAgICAqLw0KICAgICAgICBfYnRuVG9nZ2xlQXR0cmlidXRlcygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWQsDQogICAgICAgICAgICAgICAgcmVhZG9ubHk6IHRoaXMucmVhZG9ubHksDQogICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRoaXMucmVxdWlyZWQsDQogICAgICAgICAgICAgICAgZmxhdDogdGhpcy5mbGF0LA0KICAgICAgICAgICAgICAgIG91dGxpbmVkOiB0aGlzLm91dGxpbmVkLA0KICAgICAgICAgICAgICAgIHJhaXNlZDogdGhpcy5yYWlzZWQsDQogICAgICAgICAgICAgICAgaXRlbXM6IHRoaXMuaXRlbXMsDQogICAgICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLA0KICAgICAgICAgICAgICAgIHNpemU6IHRoaXMuc2l6ZSwNCiAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvciwNCiAgICAgICAgICAgICAgICB0b2dnbGVDb2xvcjogdGhpcy50b2dnbGVDb2xvciwNCiAgICAgICAgICAgICAgICBpY29uUG9zaXRpb246IHRoaXMuaWNvblBvc2l0aW9uLA0KICAgICAgICAgICAgICAgIG11bHRpcGxlOiB0aGlzLm11bHRpcGxlLA0KICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLA0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogR2V0IGNvbXB1dGVkIGNvbXBvbmVudCdzIGNsYXNzIG5hbWVzLg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fCp9IENvbXBvbmVudCBjc3MgY2xhc3Nlcw0KICAgICAgICAgKiBAcHJpdmF0ZQ0KICAgICAgICAgKi8NCiAgICAgICAgX2NsYXNzTmFtZXMoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIC4uLnRoaXMuY21wQXR0ckNsYXNzZXMsDQogICAgICAgICAgICAgICAgJ2hhcy1lcnJvcic6IHRoaXMuaGFzVmFsaWRhdGlvbkVycm9yLA0KICAgICAgICAgICAgICAgICdoYXMtc3VjY2Vzcyc6IHRoaXMud2FzVmFsaWRhdGVkICYmICF0aGlzLmhhc1ZhbGlkYXRpb25FcnJvcg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIF9vbkJsdXIoKSB7DQogICAgICAgICAgICB0aGlzLmlzRm9jdXNlZCA9IGZhbHNlOw0KICAgICAgICB9LA0KICAgICAgICBfb25Gb2N1cygpIHsNCiAgICAgICAgICAgIHRoaXMuaXNGb2N1c2VkID0gdHJ1ZTsNCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIFNldCBUb2dnbGUgZmllbGQgdmFsdWUuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcnxib29sZWFufEFycmF5fSB2YWx1ZSBUaGUgdXBkYXRlZCB2YWx1ZQ0KICAgICAgICAgKiBAcmV0dXJucyB7dm9pZH0NCiAgICAgICAgICovDQogICAgICAgIHNldFZhbHVlKHZhbHVlKSB7DQogICAgICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWx1ZSk7DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["BsButtonToggleField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BsButtonToggleField.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsButton","sourcesContent":["<template>\r\n  <div\r\n    :class=\"_classNames\"\r\n    class=\"md-field md-button-toggle row\"\r\n    @mouseenter=\"_onFocus\"\r\n    @mouseleave=\"_onBlur\">\r\n    <slot></slot>\r\n    <div class=\"col-md\">\r\n      <div class=\"md-field-inner\">\r\n        <bs-button-toggle v-bind=\"_btnToggleAttributes\" @change=\"setValue\" />\r\n      </div>\r\n      <div \r\n        v-if=\"helpText || showErrorValidation\" \r\n        class=\"md-help-text\">\r\n        <transition name=\"fade\">\r\n          <slot name=\"helpText\">\r\n            <small\r\n              v-if=\"showHelpText\"\r\n              class=\"text-muted d-block\">\r\n              {{ helpText }}\r\n            </small>\r\n          </slot>\r\n        </transition>\r\n        <template v-if=\"hasValidationError\">\r\n          <small\r\n            v-for=\"(fld) in errorItems\"\r\n            :key=\"fld\"\r\n            class=\"text-danger d-block\">\r\n            {{ _validationMessage(fld) }}\r\n          </small>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BsButtonToggle from \"./BsButtonToggle\";\r\nimport ButtonToggle from \"./mixins/ButtonToggle\";\r\nimport FieldValidation from \"../BsField/mixins/FieldValidation\";\r\nimport Input from \"../../mixins/Input\";\r\n\r\nexport default {\r\n    name: \"BsButtonToggleField\",\r\n    components: {BsButtonToggle},\r\n    mixins: [Input, ButtonToggle, FieldValidation],\r\n    model: {\r\n        prop: 'value',\r\n        event: 'change'\r\n    },\r\n    props: {\r\n        /**\r\n         * Show persistent help text or not.\r\n         * @type {boolean|*}\r\n         */\r\n        persistentHelpText: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    data: () => ({\r\n        isFocused: false\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get ButtonToggle's computed binding properties.\r\n         *\r\n         * @returns {Object|*} Component binding properties\r\n         * @private\r\n         */\r\n        _btnToggleAttributes() {\r\n            return {\r\n                disabled: this.disabled,\r\n                readonly: this.readonly,\r\n                required: this.required,\r\n                flat: this.flat,\r\n                outlined: this.outlined,\r\n                raised: this.raised,\r\n                items: this.items,\r\n                name: this.name,\r\n                size: this.size,\r\n                color: this.color,\r\n                toggleColor: this.toggleColor,\r\n                iconPosition: this.iconPosition,\r\n                multiple: this.multiple,\r\n                value: this.value,\r\n            }\r\n        },\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} Component css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this.cmpAttrClasses,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.wasValidated && !this.hasValidationError\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        _onBlur() {\r\n            this.isFocused = false;\r\n        },\r\n        _onFocus() {\r\n            this.isFocused = true;\r\n        },\r\n        /**\r\n         * Set Toggle field value.\r\n         *\r\n         * @param {string|number|boolean|Array} value The updated value\r\n         * @returns {void}\r\n         */\r\n        setValue(value) {\r\n            this.$emit('change', value);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-field {\r\n    &.#{$prefix}-button-toggle {\r\n        .#{$prefix}-field-inner {\r\n            border-bottom: 0;\r\n\r\n            .btn {\r\n                //font-size: .875rem;\r\n                margin-bottom: 0;\r\n\r\n                &.btn-sm {\r\n                    font-size: 90%;\r\n                    margin-top: $btn-margin-basic;\r\n\r\n                    .btn-inner {\r\n                        padding: $btn-margin-lg 1rem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .#{$prefix}-help-text {\r\n            min-height: 20px;\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}