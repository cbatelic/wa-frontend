{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumberField.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumberField.vue","mtime":1603614545000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQnNUZXh0RmllbGQgZnJvbSAiLi9Cc1RleHRGaWVsZCI7DQppbXBvcnQgSGVscGVyIGZyb20gIi4uLy4uL3V0aWxzL0hlbHBlciI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAiQnNOdW1iZXJGaWVsZCIsDQogICAgZXh0ZW5kczogQnNUZXh0RmllbGQsDQogICAgcHJvcHM6IHsNCiAgICAgICAgbG9jYWxlOiB7DQogICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICBkZWZhdWx0OiAnZW4tdXMnDQogICAgICAgIH0sDQogICAgICAgIHVzZUdyb3VwaW5nOiB7DQogICAgICAgICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZQ0KICAgICAgICB9LA0KICAgIH0sDQogICAgZGF0YSgpIHsNCiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLl9wYXJzZVZhbHVlKHRoaXMudmFsdWUpOw0KICAgICAgICBjb25zdCBmb3JtYXR0ZXIgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQodGhpcy5sb2NhbGUsIHsNCiAgICAgICAgICAgIG1heGltdW1GcmFjdGlvbkRpZ2l0czogMjAsDQogICAgICAgICAgICB1c2VHcm91cGluZzogdGhpcy51c2VHcm91cGluZw0KICAgICAgICB9KTsNCg0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgaW52YWxpZE51bWJlcjogZmFsc2UsDQogICAgICAgICAgICBudW1iZXJWYWx1ZTogdmFsdWUsDQogICAgICAgICAgICBmb3JtYXR0ZXI6IGZvcm1hdHRlciwNCiAgICAgICAgICAgIGxvY2FsVmFsdWU6ICFIZWxwZXIuaXNFbXB0eSh2YWx1ZSkgPyBmb3JtYXR0ZXIuZm9ybWF0KHZhbHVlKSA6IG51bGwNCiAgICAgICAgfQ0KICAgIH0sDQogICAgY29tcHV0ZWQ6IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIEdldCBpbnB1dCBmaWVsZCBjb21wdXRlZCBiaW5kaW5nJ3MgYXR0cmlidXRlcy4NCiAgICAgICAgICoNCiAgICAgICAgICogQHJldHVybnMge09iamVjdHwqfSBUaGUgYXR0cmlidXRlcyB0byBiaW5kDQogICAgICAgICAqLw0KICAgICAgICBhdHRyaWJ1dGVzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAuLi50aGlzLmNtcEF0dHJzLA0KICAgICAgICAgICAgICAgIC4uLnRoaXMuZmllbGRBdHRycywNCiAgICAgICAgICAgICAgICAndHlwZSc6IHRoaXMuZmllbGRUeXBlLA0KICAgICAgICAgICAgICAgICd2YWx1ZSc6IHRoaXMubG9jYWxWYWx1ZSwNCiAgICAgICAgICAgICAgICAnbWF4bGVuZ3RoJzogdGhpcy5tYXhsZW5ndGgsDQogICAgICAgICAgICAgICAgJ21pbmxlbmd0aCc6IHRoaXMubWlubGVuZ3RoDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9LA0KICAgIHdhdGNoOiB7DQogICAgICAgIHZhbHVlKG5ld1ZhbHVlKSB7DQogICAgICAgICAgICBpZiAobmV3VmFsdWUgJiYgdGhpcy5pc0ZvY3VzZWQpIHsNCiAgICAgICAgICAgICAgICB0aGlzLm51bWJlclZhbHVlID0gbmV3VmFsdWU7DQogICAgICAgICAgICAgICAgdGhpcy5sb2NhbFZhbHVlID0gbmV3VmFsdWU7DQogICAgICAgICAgICB9IGVsc2UgaWYgKG5ld1ZhbHVlKSB7DQogICAgICAgICAgICAgICAgdGhpcy5udW1iZXJWYWx1ZSA9IHRoaXMuX3BhcnNlVmFsdWUobmV3VmFsdWUpOw0KICAgICAgICAgICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IHRoaXMuZm9ybWF0VmFsdWUodGhpcy5udW1iZXJWYWx1ZSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLl91cGRhdGVMZWdlbmQobmV3VmFsdWUpOw0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBGb3JtYXQgdGhlIGlucHV0IHZhbHVlIGFzIG51bWJlciBmb3JtYXR0ZWQgdmFsdWUuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgdmFsdWUgdG8gZm9ybWF0DQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdmFsdWUNCiAgICAgICAgICovDQogICAgICAgIGZvcm1hdFZhbHVlKHZhbHVlKSB7DQogICAgICAgICAgICByZXR1cm4gIUhlbHBlci5pc0VtcHR5KHZhbHVlKSA/IHRoaXMuZm9ybWF0dGVyLmZvcm1hdCh2YWx1ZSkgOiBudWxsOw0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogSGFuZGxlciB3aGVuIGlucHV0IGZpZWxkIGxvc3QgZm9jdXMuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7Rm9jdXNFdmVudH0gZSBUaGUgcmVjZWl2ZWQgZXZlbnQNCiAgICAgICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICAgICAqIEBwcml2YXRlDQogICAgICAgICAqLw0KICAgICAgICBfb25CbHVyKGUpIHsNCiAgICAgICAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7DQogICAgICAgICAgICB0aGlzLmxvY2FsVmFsdWUgPSB0aGlzLmZvcm1hdFZhbHVlKHRoaXMubnVtYmVyVmFsdWUpOw0KICAgICAgICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIGUpOw0KICAgICAgICAgICAgdGhpcy5fdXBkYXRlTGVnZW5kKCk7DQogICAgICAgICAgICB0aGlzLl9uZXh0VGlja0NoYW5nZSh0aGlzLm51bWJlclZhbHVlKTsNCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIEhhbmRsZXIgd2hlbiBpbnB1dCBmaWVsZCBnZXQgZm9jdXMuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7Rm9jdXNFdmVudH0gZSBUaGUgcmVjZWl2ZWQgZXZlbnQNCiAgICAgICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICAgICAqIEBwcml2YXRlDQogICAgICAgICAqLw0KICAgICAgICBfb25Gb2N1cyhlKSB7DQogICAgICAgICAgICBpZiAoIXRoaXMuJHJlZnMuaW5wdXQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAhPT0gdGhpcy4kcmVmcy5pbnB1dCkgew0KICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuZm9jdXMoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmICh0aGlzLm51bWJlclZhbHVlID09PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICB0aGlzLm51bWJlclZhbHVlID0gdGhpcy5fcGFyc2VWYWx1ZSh0aGlzLmxvY2FsVmFsdWUpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLmlzRm9jdXNlZCA9IHRydWU7DQogICAgICAgICAgICB0aGlzLmxvY2FsVmFsdWUgPSB0aGlzLm51bWJlclZhbHVlOw0KICAgICAgICAgICAgdGhpcy4kZW1pdCgnZm9jdXMnLCBlKTsNCiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZUxlZ2VuZCgpOw0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogSGFuZGxlciB3aGVuIGlucHV0IGZpZWxkIHJlY2VpdmUga2V5cHJlc3MuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gZSBUaGUgcmVjZWl2ZWQgZXZlbnQNCiAgICAgICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICAgICAqIEBwcml2YXRlDQogICAgICAgICAqLw0KICAgICAgICBfb25LZXlEb3duKGUpIHsNCiAgICAgICAgICAgIGlmICghdGhpcy4kcmVmcy5pbnB1dCkgew0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKGUua2V5ICYmIGUua2V5LnRvTG93ZXJDYXNlKCkgPT09ICdlbnRlcicpIHsNCiAgICAgICAgICAgICAgICB0aGlzLm51bWJlclZhbHVlID0gdGhpcy5fcGFyc2VWYWx1ZSh0aGlzLmxvY2FsVmFsdWUpOw0KICAgICAgICAgICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IHRoaXMuZm9ybWF0VmFsdWUodGhpcy5udW1iZXJWYWx1ZSk7DQogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgna2V5ZG93bicsIGUpOw0KICAgICAgICAgICAgICAgIHRoaXMuX25leHRUaWNrQ2hhbmdlKHRoaXMubnVtYmVyVmFsdWUpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdrZXlkb3duJywgZSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBDb252ZXJ0IGFuIGlucHV0IHN0cmluZyBhcyBmbG9hdGluZy1wb2ludCBudW1iZXIuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydA0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgY29udmVydGVkIHZhbHVlDQogICAgICAgICAqIEBwcml2YXRlDQogICAgICAgICAqLw0KICAgICAgICBfcGFyc2VWYWx1ZSh2YWx1ZSkgew0KICAgICAgICAgICAgaWYgKEhlbHBlci5pc0VtcHR5KHZhbHVlKSkgew0KICAgICAgICAgICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IG51bGw7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGxldCBzdHJWYWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7DQogICAgICAgICAgICBjb25zdCBwb3NDb21tYSA9IHN0clZhbHVlLmluZGV4T2YoJywnKTsNCiAgICAgICAgICAgIGNvbnN0IHBvc0RvdCA9IHN0clZhbHVlLmluZGV4T2YoJy4nKTsNCg0KICAgICAgICAgICAgaWYgKHBvc0NvbW1hID4gLTEgJiYgcG9zRG90ID4gLTEpIHsNCiAgICAgICAgICAgICAgICBpZiAocG9zQ29tbWEgPiBwb3NEb3QpIHsNCiAgICAgICAgICAgICAgICAgICAgc3RyVmFsdWUgPSBzdHJWYWx1ZS5yZXBsYWNlKC9cLi9nLCAnJykucmVwbGFjZSgvLC9nLCAnLicpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHN0clZhbHVlID0gc3RyVmFsdWUucmVwbGFjZSgvLC9nLCAnJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIGlmIChwb3NDb21tYSA+IC0xKSB7DQogICAgICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gc3RyVmFsdWUuc3BsaXQoJywnKTsNCg0KICAgICAgICAgICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID4gMikgew0KICAgICAgICAgICAgICAgICAgICBzdHJWYWx1ZSA9IHZhbHVlcy5qb2luKCcnKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBzdHJWYWx1ZSA9IHZhbHVlcy5qb2luKCcuJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIGlmIChwb3NEb3QgPiAtMSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHN0clZhbHVlLnNwbGl0KCcuJyk7DQogICAgICAgICAgICAgICAgaWYgKHZhbHVlcy5sZW5ndGggPiAyKSB7DQogICAgICAgICAgICAgICAgICAgIHN0clZhbHVlID0gdmFsdWVzLmpvaW4oJycpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgZmxvYXRWYWx1ZSA9IHBhcnNlRmxvYXQoc3RyVmFsdWUpOw0KICAgICAgICAgICAgdGhpcy5pbnZhbGlkTnVtYmVyID0gaXNOYU4oZmxvYXRWYWx1ZSk7DQogICAgICAgICAgICB0aGlzLmxvY2FsVmFsdWUgPSBmbG9hdFZhbHVlOw0KDQogICAgICAgICAgICByZXR1cm4gZmxvYXRWYWx1ZTsNCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIFVwZGF0ZSBpbnB1dCBmaWVsZCB2YWx1ZSBhbmQgZmlyZSBpbnB1dCBldmVudHMuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gdmFsdWUgdGhlIGlucHV0IHZhbHVlDQogICAgICAgICAqIEByZXR1cm5zIHt2b2lkfQ0KICAgICAgICAgKiBAcHJpdmF0ZQ0KICAgICAgICAgKi8NCiAgICAgICAgX3VwZGF0ZVZhbHVlKHZhbHVlKSB7DQogICAgICAgICAgICB0aGlzLm51bWJlclZhbHVlID0gdGhpcy5fcGFyc2VWYWx1ZSh2YWx1ZSk7DQogICAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMubnVtYmVyVmFsdWUpOw0KICAgICAgICAgICAgdGhpcy5fbmV4dFRpY2tDaGFuZ2UodGhpcy5udW1iZXJWYWx1ZSk7DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["BsNumberField.vue"],"names":[],"mappingsfile":"BsNumberField.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField","sourcesContent":["<script>\r\nimport BsTextField from \"./BsTextField\";\r\nimport Helper from \"../../utils/Helper\";\r\n\r\nexport default {\r\n    name: \"BsNumberField\",\r\n    extends: BsTextField,\r\n    props: {\r\n        locale: {\r\n            type: String,\r\n            default: 'en-us'\r\n        },\r\n        useGrouping: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n    },\r\n    data() {\r\n        const value = this._parseValue(this.value);\r\n        const formatter = new Intl.NumberFormat(this.locale, {\r\n            maximumFractionDigits: 20,\r\n            useGrouping: this.useGrouping\r\n        });\r\n\r\n        return {\r\n            invalidNumber: false,\r\n            numberValue: value,\r\n            formatter: formatter,\r\n            localValue: !Helper.isEmpty(value) ? formatter.format(value) : null\r\n        }\r\n    },\r\n    computed: {\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} The attributes to bind\r\n         */\r\n        attributes() {\r\n            return {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'type': this.fieldType,\r\n                'value': this.localValue,\r\n                'maxlength': this.maxlength,\r\n                'minlength': this.minlength\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (newValue && this.isFocused) {\r\n                this.numberValue = newValue;\r\n                this.localValue = newValue;\r\n            } else if (newValue) {\r\n                this.numberValue = this._parseValue(newValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n            } else {\r\n                this.localValue = null;\r\n            }\r\n            this._updateLegend(newValue);\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * Format the input value as number formatted value.\r\n         *\r\n         * @param {number} value The value to format\r\n         * @returns {string} The formatted value\r\n         */\r\n        formatValue(value) {\r\n            return !Helper.isEmpty(value) ? this.formatter.format(value) : null;\r\n        },\r\n        /**\r\n         * Handler when input field lost focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onBlur(e) {\r\n            this.isFocused = false;\r\n            this.localValue = this.formatValue(this.numberValue);\r\n            this.$emit('blur', e);\r\n            this._updateLegend();\r\n            this._nextTickChange(this.numberValue);\r\n        },\r\n        /**\r\n         * Handler when input field get focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onFocus(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n            if (document.activeElement !== this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            if (this.numberValue === undefined) {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n            }\r\n\r\n            this.isFocused = true;\r\n            this.localValue = this.numberValue;\r\n            this.$emit('focus', e);\r\n            this._updateLegend();\r\n        },\r\n        /**\r\n         * Handler when input field receive keypress.\r\n         *\r\n         * @param {KeyboardEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onKeyDown(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n\r\n            if (e.key && e.key.toLowerCase() === 'enter') {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n                this.$emit('keydown', e);\r\n                this._nextTickChange(this.numberValue);\r\n            } else {\r\n                this.$emit('keydown', e);\r\n            }\r\n        },\r\n        /**\r\n         * Convert an input string as floating-point number.\r\n         *\r\n         * @param {string} value The value to convert\r\n         * @returns {number} The converted value\r\n         * @private\r\n         */\r\n        _parseValue(value) {\r\n            if (Helper.isEmpty(value)) {\r\n                this.localValue = null;\r\n                return null;\r\n            }\r\n\r\n            let strValue = value.toString();\r\n            const posComma = strValue.indexOf(',');\r\n            const posDot = strValue.indexOf('.');\r\n\r\n            if (posComma > -1 && posDot > -1) {\r\n                if (posComma > posDot) {\r\n                    strValue = strValue.replace(/\\./g, '').replace(/,/g, '.');\r\n                } else {\r\n                    strValue = strValue.replace(/,/g, '');\r\n                }\r\n            } else if (posComma > -1) {\r\n                const values = strValue.split(',');\r\n\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                } else {\r\n                    strValue = values.join('.');\r\n                }\r\n            } else if (posDot > -1) {\r\n                const values = strValue.split('.');\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                }\r\n            }\r\n\r\n            const floatValue = parseFloat(strValue);\r\n            this.invalidNumber = isNaN(floatValue);\r\n            this.localValue = floatValue;\r\n\r\n            return floatValue;\r\n        },\r\n        /**\r\n         * Update input field value and fire input events.\r\n         *\r\n         * @param {string|number} value the input value\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateValue(value) {\r\n            this.numberValue = this._parseValue(value);\r\n            this.$emit('input', this.numberValue);\r\n            this._nextTickChange(this.numberValue);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}