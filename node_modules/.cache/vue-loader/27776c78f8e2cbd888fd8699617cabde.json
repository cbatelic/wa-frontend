{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\SignUp.vue?vue&type=template&id=6f83b81c&scoped=true&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\SignUp.vue","mtime":1644352762734},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}