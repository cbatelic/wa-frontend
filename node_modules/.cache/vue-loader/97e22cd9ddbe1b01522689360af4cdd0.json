{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsButton\\BsButton.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsButton\\BsButton.vue","mtime":1609324035000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgIn5jb21wYXNzLXNhc3MtbWl4aW5zL2xpYi9jb21wYXNzL2NzczMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9jb2xvcnMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy92YXJpYWJsZXMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9zaGFyZWQiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9mdW5jdGlvbnMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9idXR0b25zIjsNCg0KLmJ0biB7DQogICAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cygkYnRuLWJvcmRlci1yYWRpdXMpOw0KICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oJGJ0bi10cmFuc2l0aW9uKTsNCiAgICBib3JkZXI6IDFweCBzb2xpZDsNCiAgICBjb2xvcjogJGJ0bi1jb2xvci1iYXNpYzsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogMDsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsNCiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOw0KICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDsNCg0KICAgICY6aG92ZXIsDQogICAgJjphY3RpdmUsDQogICAgJjpmb2N1cyB7DQogICAgICAgIEBpbmNsdWRlIGJveC1zaGFkb3coJHotZGVwdGgtMSk7DQogICAgICAgIG91dGxpbmU6IDA7DQogICAgfQ0KDQogICAgJjpkaXNhYmxlZCwgJi5kaXNhYmxlZCB7DQogICAgICAgIEBpbmNsdWRlIGJveC1zaGFkb3cobm9uZSk7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGdyYXktNTAwLCA4JSkgIWltcG9ydGFudDsNCiAgICAgICAgYm9yZGVyLWNvbG9yOiBsaWdodGVuKCRncmF5LTUwMCwgOCUpICFpbXBvcnRhbnQ7DQogICAgICAgIGNvbG9yOiAkZ3JheS03MDAgIWltcG9ydGFudDsNCiAgICAgICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIH0NCg0KICAgICYuYnRuLXhzIHsNCiAgICAgICAgZm9udC1zaXplOiAuNzVyZW07DQogICAgICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoJGJ0bi1ib3JkZXItcmFkaXVzKTsNCiAgICB9DQoNCiAgICAmLmJ0bi1zbSB7DQogICAgICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoJGJ0bi1ib3JkZXItcmFkaXVzKTsNCiAgICB9DQoNCiAgICAmLmJ0bi1sZyB7DQogICAgICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoJGJ0bi1ib3JkZXItcmFkaXVzKTsNCg0KICAgICAgICAmLnJvdW5kZWQsDQogICAgICAgICYucm91bmRlZC1sZyB7DQogICAgICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKCRidG4tYm9yZGVyLXJhZGl1cy1sZyAhaW1wb3J0YW50KTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgICYuYnRuLXJhaXNlZCB7DQogICAgICAgIEBpbmNsdWRlIGJveC1zaGFkb3coJHotZGVwdGgtMSk7DQoNCiAgICAgICAgJjpob3ZlciwNCiAgICAgICAgJjphY3RpdmUsDQogICAgICAgICY6Zm9jdXMgew0KICAgICAgICAgICAgQGluY2x1ZGUgYm94LXNoYWRvdygkei1kZXB0aC0xLWhhbGYpOw0KICAgICAgICB9DQoNCiAgICAgICAgJi5kaXNhYmxlZCwNCiAgICAgICAgJjpkaXNhYmxlZCB7DQogICAgICAgICAgICAmOmFjdGl2ZSwNCiAgICAgICAgICAgICY6Zm9jdXMsDQogICAgICAgICAgICAmOmhvdmVyIHsNCiAgICAgICAgICAgICAgICBAaW5jbHVkZSBib3gtc2hhZG93KCR6LWRlcHRoLTEpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQouYnRuLWZsb2F0aW5nLCAuYnRuLWljb24gew0KICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoJGJvcmRlci1yYWRpdXMtY2lyY2xlKTsNCiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKCRidG4tdHJhbnNpdGlvbik7DQogICAgQGluY2x1ZGUgZmxleGJveCgoZGlzcGxheTogaW5saW5lLWZsZXgsIGZsZXg6IDAgMCBhdXRvKSk7DQogICAgYm9yZGVyOiAxcHggc29saWQ7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBsaW5lLWhlaWdodDogMzZweDsNCiAgICBwYWRkaW5nOiAwOw0KICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7DQoNCiAgICAmOmFjdGl2ZSwNCiAgICAmOmZvY3VzIHsNCiAgICAgICAgb3V0bGluZTogMDsNCiAgICB9DQoNCiAgICAmOmRpc2FibGVkLCAmLmRpc2FibGVkIHsNCiAgICAgICAgQGluY2x1ZGUgYm94LXNoYWRvdyhub25lKTsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7DQogICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7DQogICAgICAgIGNvbG9yOiAkZ3JheS00MDAgIWltcG9ydGFudDsNCiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7DQogICAgfQ0KDQogICAgLiN7JHByZWZpeH0tcmlwcGxlIHsNCiAgICAgICAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cygkYm9yZGVyLXJhZGl1cy1jaXJjbGUpOw0KICAgICAgICB3aWR0aDogMzhweDsNCiAgICAgICAgaGVpZ2h0OiAzOHB4Ow0KICAgIH0NCg0KICAgICYuYnRuLXNtIHsNCiAgICAgICAgbGluZS1oZWlnaHQ6IDMycHg7DQoNCiAgICAgICAgLiN7JHByZWZpeH0tcmlwcGxlIHsNCiAgICAgICAgICAgIHdpZHRoOiAzMnB4Ow0KICAgICAgICAgICAgaGVpZ2h0OiAzMnB4Ow0KICAgICAgICB9DQogICAgfQ0KDQogICAgJi5idG4tbGcgew0KICAgICAgICBsaW5lLWhlaWdodDogNTZweDsNCg0KICAgICAgICAuI3skcHJlZml4fS1yaXBwbGUgew0KICAgICAgICAgICAgd2lkdGg6IDU2cHg7DQogICAgICAgICAgICBoZWlnaHQ6IDU2cHg7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAuI3skcHJlZml4fS1yaXBwbGUtZW50ZXItYWN0aXZlIHsNCiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1kdXJhdGlvbigxLjJzKTsNCiAgICB9DQp9DQoNCkBlYWNoICRidG5fbmFtZSwgJGNvbG9yX3ZhbHVlIGluICR0aGVtZS1jb2xvcnMgew0KICAgIEBpbmNsdWRlIG1ha2UtYnV0dG9uKCRidG5fbmFtZSwgJGNvbG9yX3ZhbHVlKTsNCiAgICBAaW5jbHVkZSBtYWtlLW91dGxpbmUtYnV0dG9uKCRidG5fbmFtZSwgJGNvbG9yX3ZhbHVlKTsNCiAgICBAaW5jbHVkZSBtYWtlLWZsYXQtYnV0dG9uKCRidG5fbmFtZSwgJGNvbG9yX3ZhbHVlKTsNCn0NCg0KLmJ0biwgLmJ0bi1mbG9hdGluZywgLmJ0bi1pY29uIHsNCiAgICAuI3skcHJlZml4fS1yaXBwbGUgew0KICAgICAgICBAaW5jbHVkZSBmbGV4Ym94KChkaXNwbGF5OiBmbGV4LCBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciwgYWxpZ24taXRlbXM6IGNlbnRlcikpOw0KICAgICAgICBwYWRkaW5nOiAwOw0KICAgIH0NCg0KICAgICY6YmVmb3JlIHsNCiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbigkbWQtdHJhbnNpdGlvbi1kZWZhdWx0KTsNCiAgICAgICAgQGV4dGVuZCAlZnVsbC1yZWN0LWFic29sdXRlOw0KICAgICAgICBAZXh0ZW5kICVvcGFjaXR5LTA7DQogICAgICAgIGNvbnRlbnQ6ICIgIjsNCiAgICAgICAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtY29sb3IsIG9wYWNpdHk7DQogICAgfQ0KDQogICAgJi5idG4tdHJhbnNwYXJlbnQgew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsNCiAgICAgICAgYm9yZGVyLXdpZHRoOiAwICFpbXBvcnRhbnQ7DQogICAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC41KSAhaW1wb3J0YW50Ow0KDQogICAgICAgICY6aG92ZXIsDQogICAgICAgICY6YWN0aXZlLA0KICAgICAgICAmOmZvY3VzIHsNCiAgICAgICAgICAgIG91dGxpbmU6IDA7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1LCAyNSwgMjUsIC4xNSk7DQogICAgICAgIH0NCg0KICAgICAgICAmOm5vdChbZGlzYWJsZWRdKTpub3QoLmRpc2FibGVkKTphY3RpdmUsDQogICAgICAgICY6bm90KFtkaXNhYmxlZF0pOm5vdCguZGlzYWJsZWQpOmZvY3VzLA0KICAgICAgICAmOm5vdChbZGlzYWJsZWRdKTpub3QoLmRpc2FibGVkKS5hY3RpdmUgew0KICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjgpICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCiAgICB9DQp9DQoNCi5idG4tZmxvYXRpbmcgew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCg0KICAgICYuYnRuLXJhaXNlZCB7DQogICAgICAgIEBpbmNsdWRlIGJveC1zaGFkb3coJHotZGVwdGgtMSk7DQogICAgfQ0KfQ0K"},{"version":3,"sources":["BsButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2ZA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"BsButton.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsButton","sourcesContent":["<template>\r\n  <button\r\n    :is=\"_tag\"\r\n    v-bind=\"attributes\"\r\n    v-on=\"$listeners\"\r\n    @touchstart=\"_touchStart\"\r\n    @touchmove=\"_touchMove\"\r\n    @mousedown=\"_mouseDown\">\r\n    <bs-button-content\r\n      :dropdown-toggle=\"dropdownToggle\"\r\n      :icon-mode=\"mode === 'icon'\"\r\n      :ripple-active=\"rippleActive\"\r\n      :ripple-off=\"rippleOff\"\r\n      @update:rippleActive=\"_toggleRipple\">\r\n      <template v-if=\"(mode === 'icon' || mode === 'floating') && icon\">\r\n        <font-awesome-icon v-bind=\"iconAttributes\" />\r\n      </template>\r\n      <template v-else>\r\n        <font-awesome-icon v-if=\"iconLeft && icon\" v-bind=\"iconAttributes\" />\r\n        <slot></slot>\r\n        <font-awesome-icon v-if=\"iconRight && icon\" v-bind=\"iconAttributes\" />\r\n      </template>\r\n    </bs-button-content>\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport BsButtonContent from './BsButtonContent';\r\nimport Helper from '../../utils/Helper';\r\n\r\nexport default {\r\n    name: 'BsButton',\r\n    components: {FontAwesomeIcon, BsButtonContent},\r\n    model: {\r\n        prop: 'active',\r\n        event: 'input'\r\n    },\r\n    props: {\r\n        /**\r\n         * The value to set to the buttonâ€™s type attribute. Valid values are: `button`, `submit`, `reset`.\r\n         * @type {string|*}\r\n         */\r\n        type: {\r\n            type: String,\r\n            default: 'button',\r\n            validator: (value) => ['button', 'submit', 'reset'].indexOf(value) !== -1\r\n        },\r\n        /**\r\n         * The button color to apply.\r\n         * @type {string|*}\r\n         */\r\n        color: {\r\n            type: String,\r\n            default: 'default'\r\n        },\r\n        /**\r\n         * Button mode, valid values are: `default, icon, floating`.\r\n         * @type {string|*}\r\n         */\r\n        mode: {\r\n            type: String,\r\n            default: 'default',\r\n            validator: (value) => ['default', 'icon', 'floating'].indexOf(value) !== -1\r\n        },\r\n        /**\r\n         * Button state, active or not,\r\n         * see {@link [Bootstrap](https://getbootstrap.com/docs/4.5/components/buttons/#active-state)} for details\r\n         * @type {boolean|*}\r\n         */\r\n        active: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Act as block button or not,\r\n         * see {@link [Bootstrap](https://getbootstrap.com/docs/4.5/components/buttons/#sizes)} for details\r\n         * @type {boolean|*}\r\n         */\r\n        block: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Button state: enabled or disabled\r\n         * @type {boolean|*}\r\n         */\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render as dropdowns button or not,\r\n         * see {@link [Bootstrap](https://getbootstrap.com/docs/4.5/components/dropdowns/)} for details\r\n         * @type {boolean|*}\r\n         */\r\n        dropdownToggle: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render button with flat style or not.\r\n         * @type {boolean|*}\r\n         */\r\n        flat: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render button with outlined style or not,\r\n         * see {@link [Bootstrap](https://getbootstrap.com/docs/4.5/components/buttons/#outline-buttons)} for details\r\n         * @type {boolean|*}\r\n         */\r\n        outlined: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render button with raised style or not.\r\n         * @type {boolean|*}\r\n         */\r\n        raised: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render button with rounded style or not.\r\n         * @type {boolean|*}\r\n         */\r\n        rounded: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render button with rounded-pill style or not.\r\n         * @type {boolean|*}\r\n         */\r\n        pill: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Enabled or disabled ripple effect.\r\n         * @type {boolean|*}\r\n         */\r\n        rippleOff: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render button with transparent style or not.\r\n         * @type {boolean|*}\r\n         */\r\n        transparent: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render as `<a>` element and define its `href` property and apply button styles to the element.\r\n         * @type {string|*}\r\n         */\r\n        href: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * The button size, see {@link [Bootstrap](https://getbootstrap.com/docs/4.5/components/buttons/#sizes)} for details\r\n         * @type {string|*}\r\n         */\r\n        size: {\r\n            type: String,\r\n            default: undefined,\r\n            validator: (value) => ['xs', 'sm', 'lg'].indexOf(value) !== -1\r\n        },\r\n        /**\r\n         * Any valid FontAwesome icon name,\r\n         * see {@link [FontAwesome](https://fontawesome.com/icons?d=gallery&s=solid&m=free)} for details\r\n         * @type {string|Array|*}\r\n         */\r\n        icon: {\r\n            type: [String, Array],\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Flip the icon, valid values are: `horizontal`, `vertical`, `both`.\r\n         * @type {string|*}\r\n         */\r\n        iconFlip: {\r\n            type: String,\r\n            default: undefined,\r\n            validator: (value) => ['horizontal', 'vertical', 'both'].indexOf(value) !== -1\r\n        },\r\n        /**\r\n         * Place icon at `left` (before text) or at `right` (after text).\r\n         * @type {string|*}\r\n         */\r\n        iconPosition: {\r\n            type: String,\r\n            default: 'left',\r\n            validator: (value) => ['left', 'right'].indexOf(value) !== -1\r\n        },\r\n        /**\r\n         * Rotate the icon, valid values are: `90`, `180`, `270`.\r\n         * @type {Number|string|*}\r\n         */\r\n        iconRotation: {\r\n            type: [Number, String],\r\n            default: undefined,\r\n            validator: (value) => [90, 180, 270].indexOf(parseInt(value, 10)) > -1\r\n        },\r\n        /**\r\n         * Render the icon with predefined size, valid values are: `xs`, `sm`, `lg`, `1x`, `2x`, `3x`, `4x`.\r\n         * @type {string|*}\r\n         */\r\n        iconSize: {\r\n            type: String,\r\n            default: undefined,\r\n            validator: (value) => ['lg', 'xs', 'sm', '1x', '2x', '3x', '4x'].indexOf(value) > -1\r\n        },\r\n        /**\r\n         * Render Fontawesome Icon with fixed width.\r\n         * @type {boolean|*}\r\n         */\r\n        iconFixed: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Apply spin animation to the icon.\r\n         * @type {boolean|*}\r\n         */\r\n        iconSpin: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Apply pulse animation to the icon.\r\n         * @type {boolean|*}\r\n         */\r\n        iconPulse: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data: () => ({\r\n        rippleActive: false\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get html Button type.\r\n         *\r\n         * @returns {string|null} The html button type\r\n         */\r\n        _buttonType() {\r\n            if (Helper.isEmpty(this.href)) {\r\n                return this.type;\r\n            }\r\n\r\n            return null;\r\n        },\r\n        /**\r\n         * Get computed component's styles.\r\n         *\r\n         * @returns {string[]} The collection of css classes\r\n         */\r\n        _classNames() {\r\n            return [\r\n                this.mode === 'icon' ? 'btn-icon' : (this.mode === 'floating' ? 'btn-floating' : 'btn'),\r\n                this.outlined ? 'btn-outline-' + this.color : (this.flat ? 'btn-flat-' + this.color :\r\n                    (this.transparent ? 'btn-transparent' : 'btn-' + this.color)),\r\n                this.raised ? 'btn-raised' : '',\r\n                this.pill ? 'rounded-pill' : (this.rounded ? 'rounded' : ''),\r\n                this.size ? 'btn-' + this.size : '',\r\n                this.block ? 'btn-block' : '',\r\n                this.disabled ? 'disabled' : '',\r\n                this.active ? 'active' : '',\r\n                this.rippleOff ? 'md-ripple-off' : ''\r\n            ]\r\n        },\r\n        /**\r\n         * Check if ripple animation active or not.\r\n         *\r\n         * @returns {boolean} TRUE if ripple animation is active otherwise FALSE\r\n         */\r\n        _rippleWorks() {\r\n            return !this.rippleOff && !this.disabled\r\n        },\r\n        /**\r\n         * Get Button html tag name.\r\n         *\r\n         * @returns {string} HTML tag\r\n         */\r\n        _tag() {\r\n            if (!Helper.isEmpty(this.href)) {\r\n                return 'a';\r\n            }\r\n\r\n            return 'button';\r\n        },\r\n        /**\r\n         * Get computed binding's properties.\r\n         *\r\n         * @returns {Object|*} The attributes to bind\r\n         */\r\n        attributes() {\r\n            return {\r\n                'role': 'button',\r\n                'href': this.href,\r\n                'class': this._classNames,\r\n                'type': this._buttonType,\r\n                'disabled': this._tag !== 'a' && this.disabled,\r\n                'aria-disabled': this.disabled\r\n            };\r\n        },\r\n        /**\r\n         * Get icon binding's properties.\r\n         *\r\n         * @returns {Object|*} The attributes to bind\r\n         */\r\n        iconAttributes() {\r\n            return {\r\n                icon: this.icon,\r\n                size: this.iconSize,\r\n                fixedWidth: this.iconFixed,\r\n                flip: this.iconFlip,\r\n                rotation: this.iconRotation,\r\n                spin: this.iconSpin,\r\n                pulse: this.iconPulse,\r\n                class: {\r\n                    'md-icon-left': this.iconLeft && this.mode !== 'icon' && this.mode !== 'floating',\r\n                    'md-icon-right': this.iconRight && this.mode !== 'icon' && this.mode !== 'floating',\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Check if icon position is in the left side of text or not.\r\n         *\r\n         * @returns {boolean} TRUE if icon placement is on the left side otherwise FALSE\r\n         */\r\n        iconLeft() {\r\n            return this.iconPosition === 'left';\r\n        },\r\n        /**\r\n         * Check if icon position is in the right side of text or not.\r\n         *\r\n         * @returns {boolean} TRUE if icon placement is on the right side otherwise FALSE\r\n         */\r\n        iconRight() {\r\n            return this.iconPosition === 'right';\r\n        },\r\n    },\r\n    methods: {\r\n        /**\r\n         * MouseEvent handler.\r\n         *\r\n         * @param {MouseEvent} event The received mouse event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _mouseDown(event) {\r\n            if (this._rippleWorks) {\r\n                this.rippleActive = event;\r\n            }\r\n\r\n            this.$emit('input', !this.active);\r\n            this.$listeners.mousedown && this.$listeners.mousedown(event);\r\n        },\r\n        /**\r\n         * Toggle Ripple animation state.\r\n         *\r\n         * @param {boolean} active Ripple state to apply\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _toggleRipple(active) {\r\n            this.rippleActive = active;\r\n        },\r\n        /**\r\n         * TouchEvent handler.\r\n         *\r\n         * @param {TouchEvent} event The received touch event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _touchMove(event) {\r\n            if (this._rippleWorks) {\r\n                this.rippleActive = event;\r\n            }\r\n\r\n            this.$listeners.touchmove && this.$listeners.touchmove(event);\r\n        },\r\n        /**\r\n         * TouchEvent handler.\r\n         *\r\n         * @param {TouchEvent} event The received touch event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _touchStart(event) {\r\n            if (this._rippleWorks) {\r\n                this.rippleActive = event;\r\n            }\r\n\r\n            this.$emit('input', !this.active);\r\n            this.$listeners.touchstart && this.$listeners.touchstart(event);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n@import \"../../../scss/shared\";\r\n@import \"../../../scss/functions\";\r\n@import \"../../../scss/buttons\";\r\n\r\n.btn {\r\n    @include border-radius($btn-border-radius);\r\n    @include transition($btn-transition);\r\n    border: 1px solid;\r\n    color: $btn-color-basic;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    position: relative;\r\n    text-transform: uppercase;\r\n    white-space: normal;\r\n    word-wrap: break-word;\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n        @include box-shadow($z-depth-1);\r\n        outline: 0;\r\n    }\r\n\r\n    &:disabled, &.disabled {\r\n        @include box-shadow(none);\r\n        background-color: lighten($gray-500, 8%) !important;\r\n        border-color: lighten($gray-500, 8%) !important;\r\n        color: $gray-700 !important;\r\n        cursor: default;\r\n    }\r\n\r\n    &.btn-xs {\r\n        font-size: .75rem;\r\n        @include border-radius($btn-border-radius);\r\n    }\r\n\r\n    &.btn-sm {\r\n        @include border-radius($btn-border-radius);\r\n    }\r\n\r\n    &.btn-lg {\r\n        @include border-radius($btn-border-radius);\r\n\r\n        &.rounded,\r\n        &.rounded-lg {\r\n            @include border-radius($btn-border-radius-lg !important);\r\n        }\r\n    }\r\n\r\n    &.btn-raised {\r\n        @include box-shadow($z-depth-1);\r\n\r\n        &:hover,\r\n        &:active,\r\n        &:focus {\r\n            @include box-shadow($z-depth-1-half);\r\n        }\r\n\r\n        &.disabled,\r\n        &:disabled {\r\n            &:active,\r\n            &:focus,\r\n            &:hover {\r\n                @include box-shadow($z-depth-1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.btn-floating, .btn-icon {\r\n    @include border-radius($border-radius-circle);\r\n    @include transition($btn-transition);\r\n    @include flexbox((display: inline-flex, flex: 0 0 auto));\r\n    border: 1px solid;\r\n    cursor: pointer;\r\n    position: relative;\r\n    line-height: 36px;\r\n    padding: 0;\r\n    vertical-align: middle;\r\n\r\n    &:active,\r\n    &:focus {\r\n        outline: 0;\r\n    }\r\n\r\n    &:disabled, &.disabled {\r\n        @include box-shadow(none);\r\n        background-color: transparent;\r\n        border-color: transparent;\r\n        color: $gray-400 !important;\r\n        pointer-events: none;\r\n    }\r\n\r\n    .#{$prefix}-ripple {\r\n        @include border-radius($border-radius-circle);\r\n        width: 38px;\r\n        height: 38px;\r\n    }\r\n\r\n    &.btn-sm {\r\n        line-height: 32px;\r\n\r\n        .#{$prefix}-ripple {\r\n            width: 32px;\r\n            height: 32px;\r\n        }\r\n    }\r\n\r\n    &.btn-lg {\r\n        line-height: 56px;\r\n\r\n        .#{$prefix}-ripple {\r\n            width: 56px;\r\n            height: 56px;\r\n        }\r\n    }\r\n\r\n    .#{$prefix}-ripple-enter-active {\r\n        @include transition-duration(1.2s);\r\n    }\r\n}\r\n\r\n@each $btn_name, $color_value in $theme-colors {\r\n    @include make-button($btn_name, $color_value);\r\n    @include make-outline-button($btn_name, $color_value);\r\n    @include make-flat-button($btn_name, $color_value);\r\n}\r\n\r\n.btn, .btn-floating, .btn-icon {\r\n    .#{$prefix}-ripple {\r\n        @include flexbox((display: flex, justify-content: center, align-items: center));\r\n        padding: 0;\r\n    }\r\n\r\n    &:before {\r\n        @include transition($md-transition-default);\r\n        @extend %full-rect-absolute;\r\n        @extend %opacity-0;\r\n        content: \" \";\r\n        will-change: background-color, opacity;\r\n    }\r\n\r\n    &.btn-transparent {\r\n        background-color: transparent;\r\n        border-width: 0 !important;\r\n        color: rgba(255, 255, 255, .5) !important;\r\n\r\n        &:hover,\r\n        &:active,\r\n        &:focus {\r\n            outline: 0;\r\n            background-color: rgba(25, 25, 25, .15);\r\n        }\r\n\r\n        &:not([disabled]):not(.disabled):active,\r\n        &:not([disabled]):not(.disabled):focus,\r\n        &:not([disabled]):not(.disabled).active {\r\n            color: rgba(255, 255, 255, .8) !important;\r\n        }\r\n    }\r\n}\r\n\r\n.btn-floating {\r\n    position: absolute;\r\n\r\n    &.btn-raised {\r\n        @include box-shadow($z-depth-1);\r\n    }\r\n}\r\n</style>\r\n"]}]}