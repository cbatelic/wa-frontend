{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsTextField.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsTextField.vue","mtime":1609324257000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICJAZm9ydGF3ZXNvbWUvdnVlLWZvbnRhd2Vzb21lIjsNCmltcG9ydCBCc0ljb24gZnJvbSAiLi4vQnNJY29uL0JzSWNvbiI7DQppbXBvcnQgQnNJY29uVG9nZ2xlIGZyb20gIi4uL0JzSWNvbi9Cc0ljb25Ub2dnbGUiOw0KaW1wb3J0IElucHV0IGZyb20gIi4uLy4uL21peGlucy9JbnB1dCI7DQppbXBvcnQgVGV4dEZpZWxkIGZyb20gIi4vbWl4aW5zL1RleHRGaWVsZCI7DQppbXBvcnQgRmllbGRWYWxpZGF0aW9uIGZyb20gIi4vbWl4aW5zL0ZpZWxkVmFsaWRhdGlvbiI7DQppbXBvcnQgIi4uLy4uLy4uL3Njc3MvX2ZpZWxkLnNjc3MiDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAiQnNUZXh0RmllbGQiLA0KICAgIGNvbXBvbmVudHM6IHtGb250QXdlc29tZUljb24sIEJzSWNvbiwgQnNJY29uVG9nZ2xlfSwNCiAgICBtaXhpbnM6IFtJbnB1dCwgVGV4dEZpZWxkLCBGaWVsZFZhbGlkYXRpb25dLA0KICAgIHByb3BzOiB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBTZXRzIDxpbnB1dD4gZWxlbWVudCB0eXBlIGF0dHJpYnV0ZS4gVmFsaWQgdmFsdWVzIGFyZTogYHRleHRgLCBgcGFzc3dvcmRgLCBgZW1haWxgLCBgdXJsYCwgYHRlbGAuDQogICAgICAgICAqIEB0eXBlIHtzdHJpbmd8Kn0NCiAgICAgICAgICovDQogICAgICAgIHR5cGU6IHsNCiAgICAgICAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgICAgICAgIGRlZmF1bHQ6ICd0ZXh0JywNCiAgICAgICAgICAgIHZhbGlkYXRvcjogdiA9PiBbJ3RleHQnLCAnZW1haWwnLCAncGFzc3dvcmQnLCAndGVsJywgJ3VybCcsICdyYW5nZSddLmluZGV4T2YodikgPiAtMQ0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogRW5hYmxlIHRvZ2dsZSBwYXNzd29yZCBmaWVsZC4NCiAgICAgICAgICogQHR5cGUge2Jvb2xlYW58Kn0NCiAgICAgICAgICovDQogICAgICAgIHBhc3N3b3JkVG9nZ2xlOiB7DQogICAgICAgICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogU2V0cyBgPGlucHV0PmAgZWxlbWVudCBtYXhpbXVtIGNoYXJhY3RlcnMgYWxsb3dlZC4NCiAgICAgICAgICogQHR5cGUge3N0cmluZ3xudW1iZXJ8Kn0NCiAgICAgICAgICovDQogICAgICAgIG1heGxlbmd0aDogew0KICAgICAgICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwNCiAgICAgICAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZA0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogU2V0cyBgPGlucHV0PmAgZWxlbWVudCBtaW5pbXVtIGNoYXJhY3RlcnMgYWxsb3dlZC4NCiAgICAgICAgICogQHR5cGUge3N0cmluZ3xudW1iZXJ8Kn0NCiAgICAgICAgICovDQogICAgICAgIG1pbmxlbmd0aDogew0KICAgICAgICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwNCiAgICAgICAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZA0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogU2V0cyB0YXJnZXQgYDxkYXRhbGlzdD5gIGVsZW1lbnQgSUQuDQogICAgICAgICAqIEB0eXBlIHtzdHJpbmd8Kn0NCiAgICAgICAgICovDQogICAgICAgIGRhdGFsaXN0OiB7DQogICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICBkZWZhdWx0OiB1bmRlZmluZWQNCiAgICAgICAgfSwNCiAgICB9LA0KICAgIGRhdGE6ICgpID0+ICh7DQogICAgICAgIGlzUGFzc3dvcmRUb2dnbGVkOiBmYWxzZSwNCiAgICB9KSwNCiAgICBjb21wdXRlZDogew0KICAgICAgICAvKioNCiAgICAgICAgICogR2V0IGNvbXB1dGVkIGNvbXBvbmVudCdzIGNsYXNzIG5hbWVzLg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fCp9IENvbGxlY3Rpb24gb2YgY3NzIGNsYXNzZXMNCiAgICAgICAgICogQHByaXZhdGUNCiAgICAgICAgICovDQogICAgICAgIF9jbGFzc05hbWVzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAuLi50aGlzLmNtcEF0dHJDbGFzc2VzLA0KICAgICAgICAgICAgICAgICdtZC1maWVsZC1mbGF0JzogdGhpcy5mbGF0LA0KICAgICAgICAgICAgICAgICdtZC1maWVsZC1maWxsZWQnOiB0aGlzLmZpbGxlZCwNCiAgICAgICAgICAgICAgICAnbWQtZmllbGQtb3V0bGluZWQnOiB0aGlzLm91dGxpbmVkLA0KICAgICAgICAgICAgICAgICdtZC1mbG9hdGluZy1sYWJlbCc6IHRoaXMuZmxvYXRpbmdMYWJlbCwNCiAgICAgICAgICAgICAgICAnbWQtZm9jdXNlZCc6IHRoaXMuaXNGb2N1c2VkLA0KICAgICAgICAgICAgICAgICdoYXMtZXJyb3InOiB0aGlzLmhhc1ZhbGlkYXRpb25FcnJvciwNCiAgICAgICAgICAgICAgICAnaGFzLXN1Y2Nlc3MnOiB0aGlzLmhhc1ZhbGlkYXRlZCAmJiAhdGhpcy5oYXNWYWxpZGF0aW9uRXJyb3INCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIEdldCBpbnB1dCBmaWVsZCBjb21wdXRlZCBiaW5kaW5nJ3MgYXR0cmlidXRlcy4NCiAgICAgICAgICoNCiAgICAgICAgICogQHJldHVybnMge09iamVjdHwqfSBBdHRyaWJ1dGVzIHRvIGJpbmQNCiAgICAgICAgICovDQogICAgICAgIGF0dHJpYnV0ZXMoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIC4uLnRoaXMuY21wQXR0cnMsDQogICAgICAgICAgICAgICAgLi4udGhpcy5maWVsZEF0dHJzLA0KICAgICAgICAgICAgICAgICd0eXBlJzogdGhpcy5maWVsZFR5cGUsDQogICAgICAgICAgICAgICAgJ2xpc3QnOiB0aGlzLmRhdGFsaXN0LA0KICAgICAgICAgICAgICAgICdtYXhsZW5ndGgnOiB0aGlzLm1heGxlbmd0aCwNCiAgICAgICAgICAgICAgICAnbWlubGVuZ3RoJzogdGhpcy5taW5sZW5ndGgNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIEdldCBjb21wdXRlZCBpbnB1dCBmaWVsZCB0eXBlLg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgaW5wdXQgZmllbGQgdHlwZQ0KICAgICAgICAgKi8NCiAgICAgICAgZmllbGRUeXBlKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaGFzUGFzc3dvcmRUb2dnbGUpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pc1Bhc3N3b3JkVG9nZ2xlZCA/ICd0ZXh0JyA6ICdwYXNzd29yZCc7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiB0aGlzLnR5cGU7DQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBDaGVjayBpZiBmZWF0dXJlIHBhc3N3b3JkIHRvZ2dsZSBpcyBlbmFibGVkIG9yIG5vdC4NCiAgICAgICAgICoNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IFRSVUUgaWYgaW5wdXQgZmllbGQgdHlwZSBpcyBwYXNzd29yZCBhbmQgdG9nZ2xlIGZlYXR1cmUgaXMgZW5hYmxlZA0KICAgICAgICAgKi8NCiAgICAgICAgaGFzUGFzc3dvcmRUb2dnbGUoKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy50eXBlID09PSAncGFzc3dvcmQnICYmIHRoaXMucGFzc3dvcmRUb2dnbGU7DQogICAgICAgIH0NCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICAgIHRoaXMuX3VwZGF0ZUxhYmVsKCk7DQogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgICAgIGlmICh0aGlzLmF1dG9mb2N1cyAmJiB0aGlzLiRyZWZzLmlucHV0KSB7DQogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5fdXBkYXRlTGVnZW5kKCk7DQogICAgICAgICAgICAvLyB0aGlzLl9zZXRGbG9hdGluZ0xhYmVsUG9zaXRpb24oKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICB3YXRjaDogew0KICAgICAgICB2YWx1ZShuZXdWYWwpIHsNCiAgICAgICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IG5ld1ZhbDsNCiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZUxlZ2VuZChuZXdWYWwpOw0KICAgICAgICAgICAgLy8gdGhpcy5fc2V0RmxvYXRpbmdMYWJlbFBvc2l0aW9uKCk7DQogICAgICAgIH0NCiAgICB9LA0KfQ0K"},{"version":3,"sources":["BsTextField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"BsTextField.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-field row\">\r\n    <slot v-if=\"floatingLabel === false\" v-bind=\"{ id }\" />\r\n    <div class=\"md-field-wrapper\">\r\n      <div\r\n        v-if=\"prependIconOuter\"\r\n        class=\"md-prepend-icon\">\r\n        <slot name=\"prependIconOuter\">\r\n          <font-awesome-icon :icon=\"prependIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n      <div class=\"md-field-ctrl\">\r\n        <div class=\"md-field-inner\">\r\n          <fieldset\r\n            v-if=\"outlined\"\r\n            aria-hidden=\"true\">\r\n            <legend ref=\"legend\">\r\n              <span>â€‹</span>\r\n            </legend>\r\n          </fieldset>\r\n          <div\r\n            v-if=\"prependIcon\"\r\n            class=\"md-prepend-icon\">\r\n            <slot name=\"prependIcon\">\r\n              <font-awesome-icon :icon=\"prependIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n          <div class=\"md-field-input-wrapper\">\r\n            <div\r\n              v-if=\"floatingLabel\"\r\n              ref=\"floatLabel\"\r\n              :class=\"floatingLabelClass\"\r\n              class=\"md-field-label\">\r\n              <slot v-bind=\"{ id }\" />\r\n            </div>\r\n            <input\r\n              ref=\"input\"\r\n              v-bind=\"attributes\"\r\n              role=\"textbox\"\r\n              @blur=\"_onBlur\"\r\n              @focus=\"_onFocus\"\r\n              @input=\"_updateValue($event.target.value)\"\r\n              @keydown=\"_onKeyDown\" />\r\n          </div>\r\n          <transition name=\"fade\">\r\n            <div\r\n              v-if=\"hasPasswordToggle || hasClearButton\"\r\n              class=\"md-action-icon\">\r\n              <bs-icon\r\n                v-if=\"hasClearButton\"\r\n                icon=\"clear\"\r\n                height=\"24\"\r\n                @click=\"clearValue\" />\r\n              <bs-icon-toggle\r\n                v-if=\"hasPasswordToggle\"\r\n                v-model=\"isPasswordToggled\"\r\n                icon=\"eye\"\r\n                toggle-icon=\"eye-slash\" />\r\n            </div>\r\n          </transition>\r\n          <div\r\n            v-if=\"appendIcon\"\r\n            class=\"md-append-icon\">\r\n            <slot name=\"appendIcon\">\r\n              <font-awesome-icon :icon=\"appendIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"helpText || showErrorValidation\"\r\n          class=\"md-help-text\">\r\n          <transition name=\"fade\">\r\n            <slot name=\"helpText\">\r\n              <small\r\n                v-if=\"showHelpText\"\r\n                class=\"text-muted d-block\">\r\n                {{ helpText }}\r\n              </small>\r\n            </slot>\r\n          </transition>\r\n          <template v-if=\"hasValidationError\">\r\n            <small\r\n              v-for=\"(fld) in errorItems\"\r\n              :key=\"fld\"\r\n              class=\"text-danger d-block\">\r\n              {{ _validationMessage(fld) }}\r\n            </small>\r\n          </template>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"appendIconOuter\"\r\n        class=\"md-append-icon\">\r\n        <slot name=\"appendIconOuter\">\r\n          <font-awesome-icon :icon=\"appendIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport BsIconToggle from \"../BsIcon/BsIconToggle\";\r\nimport Input from \"../../mixins/Input\";\r\nimport TextField from \"./mixins/TextField\";\r\nimport FieldValidation from \"./mixins/FieldValidation\";\r\nimport \"../../../scss/_field.scss\"\r\n\r\nexport default {\r\n    name: \"BsTextField\",\r\n    components: {FontAwesomeIcon, BsIcon, BsIconToggle},\r\n    mixins: [Input, TextField, FieldValidation],\r\n    props: {\r\n        /**\r\n         * Sets <input> element type attribute. Valid values are: `text`, `password`, `email`, `url`, `tel`.\r\n         * @type {string|*}\r\n         */\r\n        type: {\r\n            type: String,\r\n            default: 'text',\r\n            validator: v => ['text', 'email', 'password', 'tel', 'url', 'range'].indexOf(v) > -1\r\n        },\r\n        /**\r\n         * Enable toggle password field.\r\n         * @type {boolean|*}\r\n         */\r\n        passwordToggle: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * Sets `<input>` element maximum characters allowed.\r\n         * @type {string|number|*}\r\n         */\r\n        maxlength: {\r\n            type: [String, Number],\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Sets `<input>` element minimum characters allowed.\r\n         * @type {string|number|*}\r\n         */\r\n        minlength: {\r\n            type: [String, Number],\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Sets target `<datalist>` element ID.\r\n         * @type {string|*}\r\n         */\r\n        datalist: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n    },\r\n    data: () => ({\r\n        isPasswordToggled: false,\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} Collection of css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this.cmpAttrClasses,\r\n                'md-field-flat': this.flat,\r\n                'md-field-filled': this.filled,\r\n                'md-field-outlined': this.outlined,\r\n                'md-floating-label': this.floatingLabel,\r\n                'md-focused': this.isFocused,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.hasValidated && !this.hasValidationError\r\n            }\r\n        },\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} Attributes to bind\r\n         */\r\n        attributes() {\r\n            return {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'type': this.fieldType,\r\n                'list': this.datalist,\r\n                'maxlength': this.maxlength,\r\n                'minlength': this.minlength\r\n            }\r\n        },\r\n        /**\r\n         * Get computed input field type.\r\n         *\r\n         * @returns {string} The input field type\r\n         */\r\n        fieldType() {\r\n            if (this.hasPasswordToggle) {\r\n                return this.isPasswordToggled ? 'text' : 'password';\r\n            }\r\n\r\n            return this.type;\r\n        },\r\n        /**\r\n         * Check if feature password toggle is enabled or not.\r\n         *\r\n         * @returns {boolean} TRUE if input field type is password and toggle feature is enabled\r\n         */\r\n        hasPasswordToggle() {\r\n            return this.type === 'password' && this.passwordToggle;\r\n        }\r\n    },\r\n    mounted() {\r\n        this._updateLabel();\r\n        this.$nextTick(() => {\r\n            if (this.autofocus && this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            this._updateLegend();\r\n            // this._setFloatingLabelPosition();\r\n        });\r\n    },\r\n    watch: {\r\n        value(newVal) {\r\n            this.localValue = newVal;\r\n            this._updateLegend(newVal);\r\n            // this._setFloatingLabelPosition();\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}