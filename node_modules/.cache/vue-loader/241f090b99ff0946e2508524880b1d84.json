{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsCheckboxGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsCheckboxGroup.vue","mtime":1609649507000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQnNDaGVja2JveCBmcm9tICIuL0JzQ2hlY2tib3giOw0KaW1wb3J0IEZpZWxkVmFsaWRhdGlvbiBmcm9tICIuL21peGlucy9GaWVsZFZhbGlkYXRpb24iOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIkJzQ2hlY2tib3hHcm91cCIsDQogICAgY29tcG9uZW50czoge0JzQ2hlY2tib3h9LA0KICAgIG1peGluczogW0ZpZWxkVmFsaWRhdGlvbl0sDQogICAgbW9kZWw6IHsNCiAgICAgICAgcHJvcDogJ3ZhbHVlJywNCiAgICAgICAgZXZlbnQ6ICdjaGFuZ2UnDQogICAgfSwNCiAgICBwcm9wczogew0KICAgICAgICAvKioNCiAgICAgICAgICogVGhlIGNvbXBvbmVudCBjb2xvciBhcHBlYXJhbmNlLg0KICAgICAgICAgKiBAdHlwZSB7c3RyaW5nfCp9DQogICAgICAgICAqLw0KICAgICAgICBjb2xvcjogew0KICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgZGVmYXVsdDogJ2RlZmF1bHQnDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBTZXRzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBjb2x1bW5zIHRvIGRpc3BsYXkgdGhlIGNoZWNrYm94LiBXaGVuIHRoZSBudW1iZXIgb2YgaXRlbXMNCiAgICAgICAgICogZXhjZWVkIHRoZSBudW1iZXIgb2YgY29sdW1ucywgdGhlbiB0aGUgcmVtYWluaW5nIGl0ZW1zIHdpbGwgYmUgZGlzcGxheWVkIG9uIHRoZQ0KICAgICAgICAgKiBuZXh0IHJvdy4NCiAgICAgICAgICogQHR5cGUge251bWJlcnwqfQ0KICAgICAgICAgKi8NCiAgICAgICAgY29sdW1uczogew0KICAgICAgICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgICAgICAgZGVmYXVsdDogdW5kZWZpbmVkLA0KICAgICAgICAgICAgdmFsaWRhdG9yOiB2ID0+IHYgPiAwICYmIHYgPCA1DQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBUaGUgdmFsdWUgbW9uaXRvcmVkIGJ5IGB2LW1vZGVsYCB0byBtYWludGFpbiBjaGVja2VkIHN0YXRlLg0KICAgICAgICAgKiBAdHlwZSB7QXJyYXl8Kn0NCiAgICAgICAgICovDQogICAgICAgIHZhbHVlOiB7DQogICAgICAgICAgICB0eXBlOiBBcnJheSwNCiAgICAgICAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZA0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogVGhlIGNvbGxlY3Rpb24gb2YgYDxicy1jaGVja2JveD5gIHByb3BlcnR5LXZhbHVlLg0KICAgICAgICAgKiBAdHlwZSB7QXJyYXl8Kn0NCiAgICAgICAgICovDQogICAgICAgIGl0ZW1zOiB7DQogICAgICAgICAgICB0eXBlOiBBcnJheSwNCiAgICAgICAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZA0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogU2V0cyB0aGUgYDxpbnB1dD5gIGVsZW1lbnQgYG5hbWVgIGF0dHJpYnV0ZS4NCiAgICAgICAgICogQHR5cGUge3N0cmluZ3xudW1iZXJ8Kn0NCiAgICAgICAgICovDQogICAgICAgIG5hbWU6IHsNCiAgICAgICAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgICAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZA0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogU2hvdyBwZXJzaXN0ZW50IGhlbHAgdGV4dCBvciBub3QuDQogICAgICAgICAqIEB0eXBlIHtib29sZWFufCp9DQogICAgICAgICAqLw0KICAgICAgICBwZXJzaXN0ZW50SGVscFRleHQ6IHsNCiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICAgICAgICBkZWZhdWx0OiB0cnVlDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBUaGUgY2hlY2tib3gtZ3JvdXAgYDxpbnB1dD5gIGVsZW1lbnQgYHJlcXVpcmVkYCBhdHRyaWJ1dGUuDQogICAgICAgICAqIEB0eXBlIHtib29sZWFufCp9DQogICAgICAgICAqLw0KICAgICAgICByZXF1aXJlZDogew0KICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBQdXQgdGhlIGNoZWNrYm94LWdyb3VwIGluIHJlYWRvbmx5IHN0YXRlIGFuZCBzZXRzIHRoZSBlYWNoIGA8aW5wdXQ+YCBlbGVtZW50IGByZWFkb25seWAgYXR0cmlidXRlLg0KICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbnwqfQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVhZG9ubHk6IEJvb2xlYW4sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBEaXNhYmxlIHRoZSBjaGVja2JveC1ncm91cCBhbmQgdGhlIGA8aW5wdXQ+YCBlbGVtZW50Lg0KICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbnwqfQ0KICAgICAgICAgKi8NCiAgICAgICAgZGlzYWJsZWQ6IHsNCiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQ0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogU2V0cyBhbiBpbmRldGVybWluYXRlIHN0YXRlIGZvciB0aGUgY2hlY2tib3gtZ3JvdXAuDQogICAgICAgICAqIEB0eXBlIHtib29sZWFufCp9DQogICAgICAgICAqLw0KICAgICAgICBpbmRldGVybWluYXRlOiB7DQogICAgICAgICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UNCiAgICAgICAgfSwNCiAgICB9LA0KICAgIGNvbXB1dGVkOiB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBHZXQgY29tcHV0ZWQgY29tcG9uZW50J3MgY2xhc3MgbmFtZXMuDQogICAgICAgICAqDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R8Kn0gVGhlIGNvbGxlY3Rpb24gb2YgY3NzIGNsYXNzZXMNCiAgICAgICAgICovDQogICAgICAgIF9jbGFzc05hbWVzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAnbWQtZGlzYWJsZWQnOiB0aGlzLmRpc2FibGVkLA0KICAgICAgICAgICAgICAgICdtZC1yZWFkb25seSc6IHRoaXMucmVhZG9ubHksDQogICAgICAgICAgICAgICAgJ21kLXJlcXVpcmVkJzogdGhpcy5yZXF1aXJlZCwNCiAgICAgICAgICAgICAgICAnaGFzLWVycm9yJzogdGhpcy5oYXNWYWxpZGF0aW9uRXJyb3IsDQogICAgICAgICAgICAgICAgJ2hhcy1zdWNjZXNzJzogdGhpcy5oYXNWYWxpZGF0ZWQgJiYgIXRoaXMuaGFzVmFsaWRhdGlvbkVycm9yDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIF9pdGVtQ2xhc3NlcygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgJ2NvbC1tZC02JzogdGhpcy5jb2x1bW5zID4gMSwNCiAgICAgICAgICAgICAgICAnY29sLW1kLTEyJzogdGhpcy5jb2x1bW5zID09PSAxLA0KICAgICAgICAgICAgICAgIFsnY29sLWxnLScgKyBNYXRoLmNlaWwoMTIgLyB0aGlzLmNvbHVtbnMpXTogdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBTZXQgYXR0cmlidXRlcyBmb3IgZWFjaCBjaGVja2JveCBpdGVtLg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gaXRlbSAgR2xvYmFsIGF0dHJpYnV0ZQ0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXggQ2hlY2tib3ggaXRlbSBpbmRleA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fCp9IFRoZSBhdHRyaWJ1dGVzIHRvIGJpbmQNCiAgICAgICAgICogQHByaXZhdGUNCiAgICAgICAgICovDQogICAgICAgIF9jaGVja2JveEF0dHJpYnV0ZXMoaXRlbSwgaW5kZXgpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgY29sb3I6IGl0ZW0uY29sb3IgfHwgdGhpcy5jb2xvciwNCiAgICAgICAgICAgICAgICBkaXNhYmxlZDogaXRlbS5kaXNhYmxlZCB8fCB0aGlzLmRpc2FibGVkLA0KICAgICAgICAgICAgICAgIHJlYWRvbmx5OiBpdGVtLnJlYWRvbmx5IHx8IHRoaXMucmVhZG9ubHksDQogICAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUsDQogICAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lID8gaXRlbS5uYW1lIDogKHRoaXMubmFtZSA/ICh0aGlzLm5hbWUgKyAnWycgKyBpbmRleCArICddJykgOiBudWxsKSwNCiAgICAgICAgICAgICAgICBpbmRldGVybWluYXRlOiBpdGVtLmluZGV0ZXJtaW5hdGUgfHwgdGhpcy5pbmRldGVybWluYXRlLA0KICAgICAgICAgICAgICAgIGNoZWNrZWQ6IHRoaXMudmFsdWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIFNldCBDaGVja2JveEdyb3VwIHZhbHVlLg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ8Ym9vbGVhbn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldA0KICAgICAgICAgKiBAcmV0dXJucyB7dm9pZH0NCiAgICAgICAgICovDQogICAgICAgIHNldFZhbHVlKHZhbHVlKSB7DQogICAgICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWx1ZSk7DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["BsCheckboxGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"BsCheckboxGroup.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-field md-checkbox-group row\">\r\n    <slot></slot>\r\n    <div class=\"col-md\">\r\n      <div class=\"md-field-inner\">\r\n        <div class=\"form-row\">\r\n          <template v-if=\"columns\">\r\n            <div\r\n              v-for=\"(item, idx) in items\"\r\n              :key=\"'cbo-' + idx\"\r\n              :class=\"_itemClasses\">\r\n              <bs-checkbox\r\n                v-bind=\"_checkboxAttributes(item, idx)\"\r\n                @change=\"setValue\">\r\n                {{ item.label }}\r\n              </bs-checkbox>\r\n            </div>\r\n          </template>\r\n          <template v-else>\r\n            <div\r\n              v-for=\"(item, idx) in items\"\r\n              :key=\"'cbo-' + idx\"\r\n              :class=\"{'col-12 col-md': items.length > 3, 'px-1': items.length < 4}\">\r\n              <bs-checkbox\r\n                v-bind=\"_checkboxAttributes(item, idx)\"\r\n                @change=\"setValue\">\r\n                {{ item.label }}\r\n              </bs-checkbox>\r\n            </div>\r\n          </template>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"helpText || showErrorValidation\" class=\"md-help-text\">\r\n        <slot name=\"helpText\">\r\n          <small v-if=\"showHelpText\" class=\"text-muted d-block\">\r\n            {{ helpText }}\r\n          </small>\r\n        </slot>\r\n        <template v-if=\"hasValidationError\">\r\n          <small\r\n            v-for=\"(fld) in errorItems\"\r\n            :key=\"fld\"\r\n            class=\"text-danger d-block\">\r\n            {{ _validationMessage(fld) }}\r\n          </small>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BsCheckbox from \"./BsCheckbox\";\r\nimport FieldValidation from \"./mixins/FieldValidation\";\r\n\r\nexport default {\r\n    name: \"BsCheckboxGroup\",\r\n    components: {BsCheckbox},\r\n    mixins: [FieldValidation],\r\n    model: {\r\n        prop: 'value',\r\n        event: 'change'\r\n    },\r\n    props: {\r\n        /**\r\n         * The component color appearance.\r\n         * @type {string|*}\r\n         */\r\n        color: {\r\n            type: String,\r\n            default: 'default'\r\n        },\r\n        /**\r\n         * Sets the maximum number of columns to display the checkbox. When the number of items\r\n         * exceed the number of columns, then the remaining items will be displayed on the\r\n         * next row.\r\n         * @type {number|*}\r\n         */\r\n        columns: {\r\n            type: Number,\r\n            default: undefined,\r\n            validator: v => v > 0 && v < 5\r\n        },\r\n        /**\r\n         * The value monitored by `v-model` to maintain checked state.\r\n         * @type {Array|*}\r\n         */\r\n        value: {\r\n            type: Array,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * The collection of `<bs-checkbox>` property-value.\r\n         * @type {Array|*}\r\n         */\r\n        items: {\r\n            type: Array,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Sets the `<input>` element `name` attribute.\r\n         * @type {string|number|*}\r\n         */\r\n        name: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Show persistent help text or not.\r\n         * @type {boolean|*}\r\n         */\r\n        persistentHelpText: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * The checkbox-group `<input>` element `required` attribute.\r\n         * @type {boolean|*}\r\n         */\r\n        required: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Put the checkbox-group in readonly state and sets the each `<input>` element `readonly` attribute.\r\n         * @type {boolean|*}\r\n         */\r\n        readonly: Boolean,\r\n        /**\r\n         * Disable the checkbox-group and the `<input>` element.\r\n         * @type {boolean|*}\r\n         */\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Sets an indeterminate state for the checkbox-group.\r\n         * @type {boolean|*}\r\n         */\r\n        indeterminate: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n    },\r\n    computed: {\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} The collection of css classes\r\n         */\r\n        _classNames() {\r\n            return {\r\n                'md-disabled': this.disabled,\r\n                'md-readonly': this.readonly,\r\n                'md-required': this.required,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.hasValidated && !this.hasValidationError\r\n            }\r\n        },\r\n        _itemClasses() {\r\n            return {\r\n                'col-md-6': this.columns > 1,\r\n                'col-md-12': this.columns === 1,\r\n                ['col-lg-' + Math.ceil(12 / this.columns)]: true\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * Set attributes for each checkbox item.\r\n         *\r\n         * @param {Object} item  Global attribute\r\n         * @param {number} index Checkbox item index\r\n         * @returns {Object|*} The attributes to bind\r\n         * @private\r\n         */\r\n        _checkboxAttributes(item, index) {\r\n            return {\r\n                color: item.color || this.color,\r\n                disabled: item.disabled || this.disabled,\r\n                readonly: item.readonly || this.readonly,\r\n                value: item.value,\r\n                name: item.name ? item.name : (this.name ? (this.name + '[' + index + ']') : null),\r\n                indeterminate: item.indeterminate || this.indeterminate,\r\n                checked: this.value\r\n            }\r\n        },\r\n        /**\r\n         * Set CheckboxGroup value.\r\n         *\r\n         * @param {string|number|boolean} value The value to set\r\n         * @returns {void}\r\n         */\r\n        setValue(value) {\r\n            this.$emit('change', value);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-checkbox-group {\r\n    .#{$prefix}-field-inner {\r\n        border-bottom: 0 !important;\r\n    }\r\n}\r\n</style>\r\n"]}]}