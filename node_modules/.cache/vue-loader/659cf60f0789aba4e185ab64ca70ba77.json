{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\Categories.vue?vue&type=template&id=706009d6&scoped=true&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\Categories.vue","mtime":1645994779485},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}