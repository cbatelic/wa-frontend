{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\views\\Home.vue","mtime":1644756230799},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}