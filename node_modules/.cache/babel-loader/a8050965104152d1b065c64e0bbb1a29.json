{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","mtime":1644344791716},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0NoaWFyYS9EZXNrdG9wL1dBLVByb2pla3Qvd2EtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCAkcm91dGVyIGZyb20gJ0Avcm91dGVyJzsKdmFyIFNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvJywKICB0aW1lb3V0OiAxMDAwCn0pOwpTZXJ2aWNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAocmVxdWVzdCkgewogIHRyeSB7CiAgICByZXF1ZXN0LmhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9ICdCZWFyZXIgJyArIEF1dGguZ2V0VG9rZW4oKTsKICB9IGNhdGNoIChlKSB7CiAgICBjb25zb2xlLmVycm9yKGUpOwogIH0KCiAgcmV0dXJuIHJlcXVlc3Q7Cn0pOwpTZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgY29uc29sZS5sb2coJ0ludGVyY2VwdG9yJywgcmVzcG9uc2UpOwogIHJldHVybiByZXNwb25zZTsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgaWYgKGVycm9yLnJlc3BvbnNlLnN0YXR1cyA9PSA0MDEpIHsKICAgIEF1dGgubG9nb3V0KCk7CiAgICAkcm91dGVyLmdvKCk7CiAgfSAvL2NvbnNvbGUuZXJyb3IoJ0ludGVyY2VwdG9yJywgZXJyb3IucmVzcG9uc2UpCgp9KTsKdmFyIFBvc3RzID0gewogIGFkZF90ZXJyYWluOiBmdW5jdGlvbiBhZGRfdGVycmFpbihhZG1UZXJyYWluKSB7CiAgICByZXR1cm4gU2VydmljZS5wb3N0KCcvdGVycmFpbicsIGFkbVRlcnJhaW4pOwogIH0sCiAgZ2V0QWxsOiBmdW5jdGlvbiBnZXRBbGwoKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzcG9uc2UsIGRhdGE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gU2VydmljZS5nZXQoIi90ZXJyYWluIik7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgIGRhdGEgPSBkYXRhLm1hcChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICBpZDogZG9jLl9pZCwKICAgICAgICAgICAgICAgICAgdGVycmFpbk5hbWU6IGRvYy50ZXJyYWluTmFtZSwKICAgICAgICAgICAgICAgICAgdGVycmFpbkNpdHk6IGRvYy50ZXJyYWluQ2l0eSwKICAgICAgICAgICAgICAgICAgdGVycmFpbkNhdGVnb3JpZXM6IGRvYy50ZXJyYWluQ2F0ZWdvcmllcywKICAgICAgICAgICAgICAgICAgcG9zdGVkX2F0OiBOdW1iZXIoZG9jLnBvc3RlZF9hdCkKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSAvLyBhc3luYyBnZXRPbmUoaWQpewogIC8vICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBTZXJ2aWNlLmdldChgL3RlcnJhaW4vJHtpZH1gKTsKICAvLyAgICAgbGV0IGRvYyA9IHJlc3BvbnNlLmRhdGE7CiAgLy8gICAgIHJldHVybiB7CiAgLy8gICAgICAgICBpZDpkb2MuX2lkLAogIC8vICAgICAgICAgdGVycmFpbk5hbWU6IGRvYy50ZXJyYWluTmFtZSwKICAvLyAgICAgICAgIHRlcnJhaW5DaXR5OiBkb2MudGVycmFpbkNpdHksCiAgLy8gICAgICAgICB0ZXJyYWluQ2F0ZWdvcmllczogZG9jLnRlcnJhaW5DYXRlZ29yaWVzLAogIC8vICAgICAgICAgcG9zdGVkX2F0OiBOdW1iZXIoZG9jLnBvc3RlZF9hdCksCiAgLy8gICAgIH07CiAgLy8gfSwgCgp9Owp2YXIgQXV0aCA9IHsKICBsb2dpbjogZnVuY3Rpb24gbG9naW4oZW1haWwsIHBhc3N3b3JkLCBuYW1lLCBzdXJuYW1lKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlc3BvbnNlLCB1c2VyOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gU2VydmljZS5wb3N0KCIvYXV0aCIsIHsKICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICBzdXJuYW1lOiBzdXJuYW1lCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICB1c2VyID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidXNlciIsIEpTT04uc3RyaW5naWZ5KHVzZXIpKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyLnN1cm5hbWUpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgc2lnblVwOiBmdW5jdGlvbiBzaWduVXAodXNlcikgewogICAgcmV0dXJuIFNlcnZpY2UucG9zdCgnL3VzZXInLCB1c2VyKTsKICB9LAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oInVzZXIiKTsKICB9LAogIGdldFVzZXI6IGZ1bmN0aW9uIGdldFVzZXIoKSB7CiAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKTsKICB9LAogIGFjY291bnQ6IGZ1bmN0aW9uIGFjY291bnQoKSB7CiAgICB2YXIgdXNlciA9IEF1dGguZ2V0VXNlcigpOwoKICAgIGlmICh1c2VyKSB7CiAgICAgIHJldHVybiB1c2VyOwogICAgfQogIH0sCiAgZ2V0VG9rZW46IGZ1bmN0aW9uIGdldFRva2VuKCkgewogICAgdmFyIHVzZXIgPSBBdXRoLmdldFVzZXIoKTsKCiAgICBpZiAodXNlciAmJiB1c2VyLnRva2VuKSB7CiAgICAgIHJldHVybiB1c2VyLnRva2VuOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0sCiAgYXV0aGVudGljYXRlZDogZnVuY3Rpb24gYXV0aGVudGljYXRlZCgpIHsKICAgIHZhciB1c2VyID0gQXV0aC5nZXRVc2VyKCk7CgogICAgaWYgKHVzZXIgJiYgdXNlci50b2tlbikgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LAogIHN0YXRlOiB7CiAgICBnZXQgYXV0aGVudGljYXRlZCgpIHsKICAgICAgcmV0dXJuIEF1dGguYXV0aGVudGljYXRlZCgpOwogICAgfQoKICB9Cn07CmV4cG9ydCB7IFNlcnZpY2UsIEF1dGgsIFBvc3RzIH07"},{"version":3,"sources":["C:/Users/Chiara/Desktop/WA-Projekt/wa-frontend/src/services/index.js"],"names":["axios","$router","Service","create","baseURL","timeout","interceptors","request","use","headers","Auth","getToken","e","console","error","response","log","status","logout","go","Posts","add_terrain","admTerrain","post","getAll","get","data","map","doc","id","_id","terrainName","terrainCity","terrainCategories","posted_at","Number","login","email","password","name","surname","user","localStorage","setItem","JSON","stringify","signUp","removeItem","getUser","parse","getItem","account","token","authenticated","state"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport $router from '@/router';\r\n\r\n\r\nlet Service = axios.create({     \r\n    baseURL: 'http://localhost:3000/',  \r\n    timeout: 1000,\r\n});\r\n\r\nService.interceptors.request.use((request) => {\r\n   try{\r\n       request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\r\n   }\r\n   catch(e){\r\n       console.error(e);\r\n   }\r\n   return request;\r\n});\r\n\r\nService.interceptors.response.use(\r\n    (response) => {\r\n        console.log('Interceptor', response);\r\n        return response;\r\n    },\r\n    (error) => {\r\n        if(error.response.status == 401){\r\n            Auth.logout();\r\n            $router.go();\r\n        }\r\n        //console.error('Interceptor', error.response)\r\n    }\r\n);\r\n\r\nlet Posts ={\r\n    add_terrain(admTerrain) {\r\n        return Service.post('/terrain', admTerrain);\r\n    },\r\n\r\n    async getAll() {        \r\n        let response = await Service.get(`/terrain`)\r\n        let data = response.data\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                terrainName: doc.terrainName,\r\n                terrainCity: doc.terrainCity,\r\n                terrainCategories: doc.terrainCategories,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n    // async getOne(id){\r\n    //     let response = await Service.get(`/terrain/${id}`);\r\n    //     let doc = response.data;\r\n    //     return {\r\n    //         id:doc._id,\r\n    //         terrainName: doc.terrainName,\r\n    //         terrainCity: doc.terrainCity,\r\n    //         terrainCategories: doc.terrainCategories,\r\n    //         posted_at: Number(doc.posted_at),\r\n\r\n            \r\n    //     };\r\n    // }, \r\n}\r\n\r\nlet Auth = {\r\n    \r\n    async login(email, password, name, surname){\r\n        let response = await Service.post(\"/auth\",{\r\n           email: email,\r\n           password: password,\r\n           name: name,\r\n           surname: surname\r\n        });\r\n        let user = response.data\r\n        localStorage.setItem(\"user\", JSON.stringify(user)); \r\n        console.log(user.surname)\r\n        return true;\r\n    },\r\n    signUp(user) {\r\n        return Service.post('/user', user);\r\n    },\r\n    logout(){\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    getUser(){\r\n      return JSON.parse(localStorage.getItem(\"user\"))  \r\n    },\r\n    account(){\r\n        let user = Auth.getUser()\r\n        if(user){\r\n            return user\r\n        }\r\n    },\r\n    getToken(){\r\n        let user = Auth.getUser();\r\n        if(user && user.token){\r\n            return user.token\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    },\r\n    authenticated(){\r\n        let user = Auth.getUser()\r\n        if(user && user.token){\r\n           return true \r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    },\r\n    state: {\r\n        get authenticated (){\r\n           return Auth.authenticated(); \r\n        },\r\n    }\r\n};\r\n\r\nexport { Service, Auth, Posts }"]}]}