{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","mtime":1645650627642},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Chiara/Desktop/WA-Projekt/wa-frontend/src/services/index.js"],"names":["axios","$router","Service","create","baseURL","timeout","interceptors","request","use","headers","Auth","getToken","e","console","error","response","status","replace","Promise","reject","logout","go","Booking","add_booking","post","getAllBooking","get","data","map","doc","id","_id","teamName","userEmail","members","note","date","time","posted_at","Number","Posts","add_terrain","admTerrain","getAll","Admin","admin","email","role","getOne","login","password","name","surname","user","localStorage","setItem","JSON","stringify","log","signUp","removeItem","change_Password","old_password","new_password","patch","getUser","parse","getItem","account","token","authenticated","state"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport $router from '@/router';\r\n\r\n\r\nlet Service = axios.create({     \r\n    baseURL: 'http://localhost:3000/',  \r\n    timeout: 1000,\r\n});\r\n\r\nService.interceptors.request.use((request) => {\r\n   try{\r\n       request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\r\n   }\r\n   catch(e){\r\n       console.error(e);\r\n   }\r\n   return request;\r\n});\r\n\r\nService.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status == 403) {\r\n        $router.replace(\"/error\");\r\n        return Promise.reject(\"This route is forbidden!\", error);\r\n      }\r\n      if (error.response.status == 401) {\r\n        Auth.logout();\r\n        $router.go();\r\n      }\r\n    }\r\n  );\r\nlet Booking = {\r\n    add_booking(add_booking){\r\n        return Service.post('/homeAdmin', add_booking)\r\n    },\r\n    async getAllBooking() {        \r\n        let response = await Service.get(`/homeAdmin`)\r\n        let data = response.data;\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                teamName: doc.teamName,\r\n                userEmail: doc.userEmail,\r\n                members: doc.members,\r\n                note: doc.note,\r\n                date: doc.date,\r\n                time: doc.time,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n\r\n}\r\nlet Posts ={\r\n    add_terrain(admTerrain) {\r\n        return Service.post('/terrain', admTerrain);\r\n    },\r\n\r\n    async getAll() {        \r\n        let response = await Service.get(`/terrain`)\r\n        return response.data\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                terrainName: doc.terrainName,\r\n                terrainCity: doc.terrainCity,\r\n                terrainCategories: doc.terrainCategories,\r\n                date: doc.date,\r\n                time: doc.time,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n    // async getOne(id){\r\n    //     let response = await Service.get(`/terrain/${id}`);\r\n    //     let doc = response.data;\r\n    //     return {\r\n    //         id:doc._id,\r\n    //         terrainName: doc.terrainName,\r\n    //         terrainCity: doc.terrainCity,\r\n    //         terrainCategories: doc.terrainCategories,\r\n    //         posted_at: Number(doc.posted_at),\r\n\r\n            \r\n    //     };\r\n    // }, \r\n}\r\nlet Admin = {\r\n    async getAll(admin) {\r\n      let response = await Service.get(`/admin?${admin}`);\r\n      let data = response.data;\r\n      data = data.map((doc) => {\r\n        return {\r\n          email: doc.email,\r\n          role: doc.role,\r\n        };\r\n      });\r\n      return data;\r\n    },\r\n  \r\n    async getOne(admin) {\r\n      let response = await Service.get(`/admin/${admin}`);\r\n      let doc = response.data;\r\n      return {\r\n        role: doc.role,\r\n      };\r\n    },\r\n  };\r\n\r\nlet Auth = {\r\n    \r\n    async login(email, password, name, surname){\r\n        let response = await Service.post(\"/auth\",{\r\n           email: email,\r\n           password: password,\r\n           name: name,\r\n           surname: surname\r\n        });\r\n        let user = response.data\r\n        localStorage.setItem(\"user\", JSON.stringify(user)); \r\n        console.log(user.surname)\r\n        return true;\r\n    },\r\n    signUp(user) {\r\n        return Service.post('/user', user);\r\n    },\r\n    logout(){\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async change_Password(old_password, new_password) {\r\n        let response = await Service.patch('/user', {\r\n          old_password: old_password,\r\n          new_password: new_password\r\n        });\r\n    \r\n        let user = response.data;\r\n    \r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    \r\n        return true;\r\n      },\r\n    getUser(){\r\n      return JSON.parse(localStorage.getItem(\"user\"))  \r\n    },\r\n    account(){\r\n        let user = Auth.getUser()\r\n        if(user){\r\n            return user\r\n        }\r\n    },\r\n    getToken(){\r\n        let user = Auth.getUser();\r\n        if(user && user.token){\r\n            return user.token\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    },\r\n    authenticated(){\r\n        let user = Auth.getUser()\r\n        if(user && user.token){\r\n           return true \r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    },\r\n    state: {\r\n        get authenticated (){\r\n           return Auth.authenticated(); \r\n        },\r\n    }\r\n};\r\n\r\nexport { Service, Auth, Posts, Admin, Booking}"]}]}