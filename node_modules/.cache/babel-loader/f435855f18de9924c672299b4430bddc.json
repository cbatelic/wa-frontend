{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","mtime":1647207173430},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Chiara/Desktop/WA-Projekt/wa-frontend/src/services/index.js"],"names":["axios","$router","Service","create","baseURL","timeout","interceptors","request","use","headers","Auth","getToken","e","console","error","response","log","status","logout","go","Booking","add_booking","post","getAllBooking","get","data","map","doc","id","_id","terrainId","teamName","userEmail","members","note","posted_at","Number","Posts","add_terrain","admTerrain","getAll","Question","send_question","getAllQuestions","name","surname","email","message","getOneQuestion","Admin","login","password","user","localStorage","setItem","JSON","stringify","signUp","removeItem","change_Password","old_password","new_password","patch","getUser","parse","getItem","account","token","authenticated","state"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport $router from '@/router';\r\n\r\n\r\nlet Service = axios.create({     \r\n    baseURL: 'http://localhost:3000/',  \r\n    timeout: 1000,\r\n});\r\n\r\nService.interceptors.request.use((request) => {\r\n   try{\r\n       request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\r\n   }\r\n   catch(e){\r\n       console.error(e);\r\n   }\r\n   return request;\r\n});\r\n\r\nService.interceptors.response.use(\r\n    (response) => {\r\n        console.log('Interceptor', response);\r\n        return response;\r\n    },\r\n    (error) => {\r\n        if(error.response.status == 401){\r\n            Auth.logout();\r\n            $router.go();\r\n        }\r\n    }\r\n);\r\n//     (response) => response,\r\n//     (error) => {\r\n//       if (error.response.status == 403) {\r\n//         $router.replace(\"/error\");\r\n//         return Promise.reject(\"This route is forbidden!\", error);\r\n//       }\r\n//       if (error.response.status == 401) {\r\n//         Auth.logout();\r\n//         $router.go();\r\n//       }\r\n//     }\r\n//   );\r\nlet Booking = {\r\n    add_booking(add_booking){\r\n        return Service.post('/homeAdmin', add_booking)\r\n    },\r\n    async getAllBooking() {        \r\n        let response = await Service.get(`/homeAdmin`)\r\n        let data = response.data;\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                terrainId: doc._id,\r\n                teamName: doc.teamName,\r\n                userEmail: doc.userEmail,\r\n                members: doc.members,\r\n                note: doc.note,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n\r\n}\r\nlet Posts ={\r\n    add_terrain(admTerrain) {\r\n        return Service.post('/terrain', admTerrain);\r\n    },\r\n\r\n    async getAll() {        \r\n        let response = await Service.get(`/terrain`)\r\n        return response.data\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                terrainName: doc.terrainName,\r\n                terrainCity: doc.terrainCity,\r\n                terrainCategories: doc.terrainCategories,\r\n                date: doc.date,\r\n                time: doc.time,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n    // async getOne(id){\r\n    //     let response = await Service.get(`/terrain/${id}`);\r\n    //     let doc = response.data;\r\n    //     return {\r\n    //         id:doc._id,\r\n    //         terrainName: doc.terrainName,\r\n    //         terrainCity: doc.terrainCity,\r\n    //         terrainCategories: doc.terrainCategories,\r\n    //         posted_at: Number(doc.posted_at),\r\n\r\n            \r\n    //     };\r\n    // }, \r\n}\r\n\r\nlet Question = {\r\n    send_question(send_question) {\r\n        return Service.post('/usersQuestionsAdmin', send_question);\r\n    },\r\n\r\n    async getAllQuestions() {        \r\n        let response = await Service.get(`/usersQuestionsAdmin`)\r\n        let data = response.data;\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                name: doc.name,\r\n                surname: doc.surname,\r\n                email: doc.email,\r\n                message: doc.message,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n\r\n    async getOneQuestion(id) {\r\n        let response = await Service.get(`/usersQuestionsAdmin/${id}`);\r\n        let doc = response.data;\r\n        return {\r\n          id: doc._id,\r\n          name: doc.name,\r\n          surname: doc.surname,\r\n          email: doc.email,\r\n          message: doc.message,\r\n          posted_at: Number (doc.posted_at)\r\n        };\r\n      },\r\n\r\n}\r\nlet Admin = {\r\n//     async getAll(admin) {\r\n//       let response = await Service.get(`/homeAdmin?${admin}`);\r\n//       let data = response.data;\r\n//       data = data.map((doc) => {\r\n//         return {\r\n//           email: doc.email,\r\n//           role: doc.role,\r\n//         };\r\n//       });\r\n//       return data;\r\n//     },\r\n  \r\n//     async getOne(admin) {\r\n//       let response = await Service.get(`/homeAdmin/${admin}`);\r\n//       let doc = response.data;\r\n//       return {\r\n//         role: doc.role,\r\n//       };\r\n//     },\r\n  };\r\n\r\nlet Auth = {\r\n    \r\n    async login(email, password, name, surname){\r\n        let response = await Service.post(\"/auth\",{\r\n           email: email,\r\n           password: password,\r\n           name: name,\r\n           surname: surname\r\n        });\r\n        let user = response.data\r\n        localStorage.setItem(\"user\", JSON.stringify(user)); \r\n        console.log(user.surname)\r\n        return true;\r\n    },\r\n    signUp(user) {\r\n        return Service.post('/user', user);\r\n    },\r\n    logout(){\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async change_Password(old_password, new_password) {\r\n        let response = await Service.patch('/user', {\r\n          old_password: old_password,\r\n          new_password: new_password\r\n        });\r\n    \r\n        let user = response.data;\r\n    \r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    \r\n        return true;\r\n      },\r\n    getUser(){\r\n      return JSON.parse(localStorage.getItem(\"user\"))  \r\n    },\r\n    account(){\r\n        let user = Auth.getUser()\r\n        if(user){\r\n            return user\r\n        }\r\n    },\r\n    getToken(){\r\n        let user = Auth.getUser();\r\n        if(user && user.token){\r\n            return user.token\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    },\r\n    authenticated(){\r\n        let user = Auth.getUser()\r\n        if(user && user.token){\r\n           return true \r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    },\r\n    state: {\r\n        get authenticated (){\r\n           return Auth.authenticated(); \r\n        },\r\n    }\r\n};\r\n\r\nexport { Service, Auth, Posts, Admin, Booking, Question}"]}]}