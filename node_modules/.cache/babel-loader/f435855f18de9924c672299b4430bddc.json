{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\src\\services\\index.js","mtime":1649261573941},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Chiara/Desktop/WA-Projekt/wa-frontend/src/services/index.js"],"names":["axios","$router","Service","create","baseURL","timeout","interceptors","request","use","headers","Auth","getToken","e","console","error","response","status","logout","go","Booking","add_booking","post","update_team","team","put","getAllBooking","get","data","Posts","add_terrain","admTerrain","getAll","Question","send_question","getAllQuestions","map","doc","id","_id","name","surname","email","message","posted_at","Number","getOneQuestion","login","password","user","localStorage","setItem","JSON","stringify","log","signUp","removeItem","change_Password","old_password","new_password","patch","getUser","parse","getItem","account","token","authenticated","state"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport $router from '@/router';\r\n\r\n\r\nlet Service = axios.create({     \r\n    baseURL: 'http://localhost:3000/',  \r\n    timeout: 1000,\r\n});\r\n\r\nService.interceptors.request.use((request) => {\r\n   try{\r\n       request.headers['Authorization'] = 'Bearer ' + Auth.getToken();\r\n   }\r\n   catch(e){\r\n       console.error(e);\r\n   }\r\n   return request;\r\n});\r\n\r\nService.interceptors.response.use(\r\n    (response) => {\r\n        \r\n        return response;\r\n    },\r\n    (error) => {\r\n        if(error.response.status == 401){\r\n            Auth.logout();\r\n            $router.go();\r\n        }\r\n    }\r\n);\r\n\r\nlet Booking = {\r\n    add_booking(add_booking){\r\n        return Service.post('/homeAdmin', add_booking)\r\n    },\r\n    update_team(team) {\r\n        return Service.put('/homeAdmin', team)\r\n    },\r\n    async getAllBooking() {        \r\n        let response = await Service.get(`/homeAdmin`)\r\n        return response.data\r\n        let data = response.data;\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                terrainId: doc._id,\r\n                teamName: doc.teamName,\r\n                userEmail: doc.userEmail,\r\n                members: doc.members,\r\n                note: doc.note,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n\r\n}\r\nlet Posts ={\r\n    add_terrain(admTerrain) {\r\n        return Service.post('/terrain', admTerrain);\r\n    },\r\n\r\n    async getAll() {        \r\n        let response = await Service.get(`/terrain`)\r\n        return response.data\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                terrainName: doc.terrainName,\r\n                terrainCity: doc.terrainCity,\r\n                terrainCategories: doc.terrainCategories,\r\n                date: doc.date,\r\n                time: doc.time,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n}\r\n\r\nlet Question = {\r\n    send_question(send_question) {\r\n        return Service.post('/usersQuestionsAdmin', send_question);\r\n    },\r\n\r\n    async getAllQuestions() {        \r\n        let response = await Service.get(`/usersQuestionsAdmin`)\r\n        let data = response.data;\r\n        data = data.map(doc =>{\r\n            return {\r\n                id:doc._id,\r\n                name: doc.name,\r\n                surname: doc.surname,\r\n                email: doc.email,\r\n                message: doc.message,\r\n                posted_at: Number (doc.posted_at)\r\n            \r\n            };\r\n        });\r\n        return data\r\n    },\r\n\r\n    async getOneQuestion(id) {\r\n        let response = await Service.get(`/usersQuestionsAdmin/${id}`);\r\n        let doc = response.data;\r\n        return {\r\n          id: doc._id,\r\n          name: doc.name,\r\n          surname: doc.surname,\r\n          email: doc.email,\r\n          message: doc.message,\r\n          posted_at: Number (doc.posted_at)\r\n        };\r\n      },\r\n\r\n}\r\n\r\nlet Auth = {\r\n    \r\n    async login(email, password, name, surname){\r\n        let response = await Service.post(\"/auth\",{\r\n           email: email,\r\n           password: password,\r\n           name: name,\r\n           surname: surname\r\n        });\r\n        let user = response.data\r\n        localStorage.setItem(\"user\", JSON.stringify(user)); \r\n        console.log(user.surname)\r\n        return true;\r\n    },\r\n    signUp(user) {\r\n        return Service.post('/user', user);\r\n    },\r\n    logout(){\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async change_Password(old_password, new_password) {\r\n        let response = await Service.patch('/user', {\r\n          old_password: old_password,\r\n          new_password: new_password\r\n        });\r\n    \r\n        let user = response.data;\r\n    \r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    \r\n        return true;\r\n      },\r\n    getUser(){\r\n      return JSON.parse(localStorage.getItem(\"user\"))  \r\n    },\r\n    account(){\r\n        let user = Auth.getUser()\r\n        if(user){\r\n            return user\r\n        }\r\n    },\r\n    getToken(){\r\n        let user = Auth.getUser();\r\n        if(user && user.token){\r\n            return user.token\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    },\r\n    authenticated(){\r\n        let user = Auth.getUser()\r\n        if(user && user.token){\r\n           return true \r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    },\r\n    state: {\r\n        get authenticated (){\r\n           return Auth.authenticated(); \r\n        },\r\n    }\r\n};\r\n\r\nexport { Service, Auth, Posts,  Booking, Question}"]}]}