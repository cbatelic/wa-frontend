{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumberField.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumberField.vue","mtime":1603614545000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvQ2hpYXJhL0Rlc2t0b3AvV0EtUHJvamVrdC93YS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtZmxvYXQuanMiOwppbXBvcnQgQnNUZXh0RmllbGQgZnJvbSAiLi9Cc1RleHRGaWVsZCI7CmltcG9ydCBIZWxwZXIgZnJvbSAiLi4vLi4vdXRpbHMvSGVscGVyIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCc051bWJlckZpZWxkIiwKICAiZXh0ZW5kcyI6IEJzVGV4dEZpZWxkLAogIHByb3BzOiB7CiAgICBsb2NhbGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICdlbi11cycKICAgIH0sCiAgICB1c2VHcm91cGluZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICAiZGVmYXVsdCI6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgdmFsdWUgPSB0aGlzLl9wYXJzZVZhbHVlKHRoaXMudmFsdWUpOwoKICAgIHZhciBmb3JtYXR0ZXIgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQodGhpcy5sb2NhbGUsIHsKICAgICAgbWF4aW11bUZyYWN0aW9uRGlnaXRzOiAyMCwKICAgICAgdXNlR3JvdXBpbmc6IHRoaXMudXNlR3JvdXBpbmcKICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgaW52YWxpZE51bWJlcjogZmFsc2UsCiAgICAgIG51bWJlclZhbHVlOiB2YWx1ZSwKICAgICAgZm9ybWF0dGVyOiBmb3JtYXR0ZXIsCiAgICAgIGxvY2FsVmFsdWU6ICFIZWxwZXIuaXNFbXB0eSh2YWx1ZSkgPyBmb3JtYXR0ZXIuZm9ybWF0KHZhbHVlKSA6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLyoqDQogICAgICogR2V0IGlucHV0IGZpZWxkIGNvbXB1dGVkIGJpbmRpbmcncyBhdHRyaWJ1dGVzLg0KICAgICAqDQogICAgICogQHJldHVybnMge09iamVjdHwqfSBUaGUgYXR0cmlidXRlcyB0byBiaW5kDQogICAgICovCiAgICBhdHRyaWJ1dGVzOiBmdW5jdGlvbiBhdHRyaWJ1dGVzKCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMuY21wQXR0cnMpLCB0aGlzLmZpZWxkQXR0cnMpLCB7fSwgewogICAgICAgICd0eXBlJzogdGhpcy5maWVsZFR5cGUsCiAgICAgICAgJ3ZhbHVlJzogdGhpcy5sb2NhbFZhbHVlLAogICAgICAgICdtYXhsZW5ndGgnOiB0aGlzLm1heGxlbmd0aCwKICAgICAgICAnbWlubGVuZ3RoJzogdGhpcy5taW5sZW5ndGgKICAgICAgfSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKG5ld1ZhbHVlKSB7CiAgICAgIGlmIChuZXdWYWx1ZSAmJiB0aGlzLmlzRm9jdXNlZCkgewogICAgICAgIHRoaXMubnVtYmVyVmFsdWUgPSBuZXdWYWx1ZTsKICAgICAgICB0aGlzLmxvY2FsVmFsdWUgPSBuZXdWYWx1ZTsKICAgICAgfSBlbHNlIGlmIChuZXdWYWx1ZSkgewogICAgICAgIHRoaXMubnVtYmVyVmFsdWUgPSB0aGlzLl9wYXJzZVZhbHVlKG5ld1ZhbHVlKTsKICAgICAgICB0aGlzLmxvY2FsVmFsdWUgPSB0aGlzLmZvcm1hdFZhbHVlKHRoaXMubnVtYmVyVmFsdWUpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IG51bGw7CiAgICAgIH0KCiAgICAgIHRoaXMuX3VwZGF0ZUxlZ2VuZChuZXdWYWx1ZSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioNCiAgICAgKiBGb3JtYXQgdGhlIGlucHV0IHZhbHVlIGFzIG51bWJlciBmb3JtYXR0ZWQgdmFsdWUuDQogICAgICoNCiAgICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgVGhlIHZhbHVlIHRvIGZvcm1hdA0KICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdmFsdWUNCiAgICAgKi8KICAgIGZvcm1hdFZhbHVlOiBmdW5jdGlvbiBmb3JtYXRWYWx1ZSh2YWx1ZSkgewogICAgICByZXR1cm4gIUhlbHBlci5pc0VtcHR5KHZhbHVlKSA/IHRoaXMuZm9ybWF0dGVyLmZvcm1hdCh2YWx1ZSkgOiBudWxsOwogICAgfSwKCiAgICAvKioNCiAgICAgKiBIYW5kbGVyIHdoZW4gaW5wdXQgZmllbGQgbG9zdCBmb2N1cy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Rm9jdXNFdmVudH0gZSBUaGUgcmVjZWl2ZWQgZXZlbnQNCiAgICAgKiBAcmV0dXJucyB7dm9pZH0NCiAgICAgKiBAcHJpdmF0ZQ0KICAgICAqLwogICAgX29uQmx1cjogZnVuY3Rpb24gX29uQmx1cihlKSB7CiAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7CiAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IHRoaXMuZm9ybWF0VmFsdWUodGhpcy5udW1iZXJWYWx1ZSk7CiAgICAgIHRoaXMuJGVtaXQoJ2JsdXInLCBlKTsKCiAgICAgIHRoaXMuX3VwZGF0ZUxlZ2VuZCgpOwoKICAgICAgdGhpcy5fbmV4dFRpY2tDaGFuZ2UodGhpcy5udW1iZXJWYWx1ZSk7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIEhhbmRsZXIgd2hlbiBpbnB1dCBmaWVsZCBnZXQgZm9jdXMuDQogICAgICoNCiAgICAgKiBAcGFyYW0ge0ZvY3VzRXZlbnR9IGUgVGhlIHJlY2VpdmVkIGV2ZW50DQogICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICogQHByaXZhdGUNCiAgICAgKi8KICAgIF9vbkZvY3VzOiBmdW5jdGlvbiBfb25Gb2N1cyhlKSB7CiAgICAgIGlmICghdGhpcy4kcmVmcy5pbnB1dCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IHRoaXMuJHJlZnMuaW5wdXQpIHsKICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLm51bWJlclZhbHVlID09PSB1bmRlZmluZWQpIHsKICAgICAgICB0aGlzLm51bWJlclZhbHVlID0gdGhpcy5fcGFyc2VWYWx1ZSh0aGlzLmxvY2FsVmFsdWUpOwogICAgICB9CgogICAgICB0aGlzLmlzRm9jdXNlZCA9IHRydWU7CiAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IHRoaXMubnVtYmVyVmFsdWU7CiAgICAgIHRoaXMuJGVtaXQoJ2ZvY3VzJywgZSk7CgogICAgICB0aGlzLl91cGRhdGVMZWdlbmQoKTsKICAgIH0sCgogICAgLyoqDQogICAgICogSGFuZGxlciB3aGVuIGlucHV0IGZpZWxkIHJlY2VpdmUga2V5cHJlc3MuDQogICAgICoNCiAgICAgKiBAcGFyYW0ge0tleWJvYXJkRXZlbnR9IGUgVGhlIHJlY2VpdmVkIGV2ZW50DQogICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICogQHByaXZhdGUNCiAgICAgKi8KICAgIF9vbktleURvd246IGZ1bmN0aW9uIF9vbktleURvd24oZSkgewogICAgICBpZiAoIXRoaXMuJHJlZnMuaW5wdXQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmIChlLmtleSAmJiBlLmtleS50b0xvd2VyQ2FzZSgpID09PSAnZW50ZXInKSB7CiAgICAgICAgdGhpcy5udW1iZXJWYWx1ZSA9IHRoaXMuX3BhcnNlVmFsdWUodGhpcy5sb2NhbFZhbHVlKTsKICAgICAgICB0aGlzLmxvY2FsVmFsdWUgPSB0aGlzLmZvcm1hdFZhbHVlKHRoaXMubnVtYmVyVmFsdWUpOwogICAgICAgIHRoaXMuJGVtaXQoJ2tleWRvd24nLCBlKTsKCiAgICAgICAgdGhpcy5fbmV4dFRpY2tDaGFuZ2UodGhpcy5udW1iZXJWYWx1ZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kZW1pdCgna2V5ZG93bicsIGUpOwogICAgICB9CiAgICB9LAoKICAgIC8qKg0KICAgICAqIENvbnZlcnQgYW4gaW5wdXQgc3RyaW5nIGFzIGZsb2F0aW5nLXBvaW50IG51bWJlci4NCiAgICAgKg0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydA0KICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSBjb252ZXJ0ZWQgdmFsdWUNCiAgICAgKiBAcHJpdmF0ZQ0KICAgICAqLwogICAgX3BhcnNlVmFsdWU6IGZ1bmN0aW9uIF9wYXJzZVZhbHVlKHZhbHVlKSB7CiAgICAgIGlmIChIZWxwZXIuaXNFbXB0eSh2YWx1ZSkpIHsKICAgICAgICB0aGlzLmxvY2FsVmFsdWUgPSBudWxsOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CgogICAgICB2YXIgc3RyVmFsdWUgPSB2YWx1ZS50b1N0cmluZygpOwogICAgICB2YXIgcG9zQ29tbWEgPSBzdHJWYWx1ZS5pbmRleE9mKCcsJyk7CiAgICAgIHZhciBwb3NEb3QgPSBzdHJWYWx1ZS5pbmRleE9mKCcuJyk7CgogICAgICBpZiAocG9zQ29tbWEgPiAtMSAmJiBwb3NEb3QgPiAtMSkgewogICAgICAgIGlmIChwb3NDb21tYSA+IHBvc0RvdCkgewogICAgICAgICAgc3RyVmFsdWUgPSBzdHJWYWx1ZS5yZXBsYWNlKC9cLi9nLCAnJykucmVwbGFjZSgvLC9nLCAnLicpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzdHJWYWx1ZSA9IHN0clZhbHVlLnJlcGxhY2UoLywvZywgJycpOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChwb3NDb21tYSA+IC0xKSB7CiAgICAgICAgdmFyIHZhbHVlcyA9IHN0clZhbHVlLnNwbGl0KCcsJyk7CgogICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID4gMikgewogICAgICAgICAgc3RyVmFsdWUgPSB2YWx1ZXMuam9pbignJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHN0clZhbHVlID0gdmFsdWVzLmpvaW4oJy4nKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAocG9zRG90ID4gLTEpIHsKICAgICAgICB2YXIgX3ZhbHVlcyA9IHN0clZhbHVlLnNwbGl0KCcuJyk7CgogICAgICAgIGlmIChfdmFsdWVzLmxlbmd0aCA+IDIpIHsKICAgICAgICAgIHN0clZhbHVlID0gX3ZhbHVlcy5qb2luKCcnKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHZhciBmbG9hdFZhbHVlID0gcGFyc2VGbG9hdChzdHJWYWx1ZSk7CiAgICAgIHRoaXMuaW52YWxpZE51bWJlciA9IGlzTmFOKGZsb2F0VmFsdWUpOwogICAgICB0aGlzLmxvY2FsVmFsdWUgPSBmbG9hdFZhbHVlOwogICAgICByZXR1cm4gZmxvYXRWYWx1ZTsKICAgIH0sCgogICAgLyoqDQogICAgICogVXBkYXRlIGlucHV0IGZpZWxkIHZhbHVlIGFuZCBmaXJlIGlucHV0IGV2ZW50cy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gdmFsdWUgdGhlIGlucHV0IHZhbHVlDQogICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICogQHByaXZhdGUNCiAgICAgKi8KICAgIF91cGRhdGVWYWx1ZTogZnVuY3Rpb24gX3VwZGF0ZVZhbHVlKHZhbHVlKSB7CiAgICAgIHRoaXMubnVtYmVyVmFsdWUgPSB0aGlzLl9wYXJzZVZhbHVlKHZhbHVlKTsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLm51bWJlclZhbHVlKTsKCiAgICAgIHRoaXMuX25leHRUaWNrQ2hhbmdlKHRoaXMubnVtYmVyVmFsdWUpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["BsNumberField.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport BsTextField from \"./BsTextField\";\r\nimport Helper from \"../../utils/Helper\";\r\n\r\nexport default {\r\n    name: \"BsNumberField\",\r\n    extends: BsTextField,\r\n    props: {\r\n        locale: {\r\n            type: String,\r\n            default: 'en-us'\r\n        },\r\n        useGrouping: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n    },\r\n    data() {\r\n        const value = this._parseValue(this.value);\r\n        const formatter = new Intl.NumberFormat(this.locale, {\r\n            maximumFractionDigits: 20,\r\n            useGrouping: this.useGrouping\r\n        });\r\n\r\n        return {\r\n            invalidNumber: false,\r\n            numberValue: value,\r\n            formatter: formatter,\r\n            localValue: !Helper.isEmpty(value) ? formatter.format(value) : null\r\n        }\r\n    },\r\n    computed: {\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} The attributes to bind\r\n         */\r\n        attributes() {\r\n            return {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'type': this.fieldType,\r\n                'value': this.localValue,\r\n                'maxlength': this.maxlength,\r\n                'minlength': this.minlength\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (newValue && this.isFocused) {\r\n                this.numberValue = newValue;\r\n                this.localValue = newValue;\r\n            } else if (newValue) {\r\n                this.numberValue = this._parseValue(newValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n            } else {\r\n                this.localValue = null;\r\n            }\r\n            this._updateLegend(newValue);\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * Format the input value as number formatted value.\r\n         *\r\n         * @param {number} value The value to format\r\n         * @returns {string} The formatted value\r\n         */\r\n        formatValue(value) {\r\n            return !Helper.isEmpty(value) ? this.formatter.format(value) : null;\r\n        },\r\n        /**\r\n         * Handler when input field lost focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onBlur(e) {\r\n            this.isFocused = false;\r\n            this.localValue = this.formatValue(this.numberValue);\r\n            this.$emit('blur', e);\r\n            this._updateLegend();\r\n            this._nextTickChange(this.numberValue);\r\n        },\r\n        /**\r\n         * Handler when input field get focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onFocus(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n            if (document.activeElement !== this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            if (this.numberValue === undefined) {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n            }\r\n\r\n            this.isFocused = true;\r\n            this.localValue = this.numberValue;\r\n            this.$emit('focus', e);\r\n            this._updateLegend();\r\n        },\r\n        /**\r\n         * Handler when input field receive keypress.\r\n         *\r\n         * @param {KeyboardEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onKeyDown(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n\r\n            if (e.key && e.key.toLowerCase() === 'enter') {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n                this.$emit('keydown', e);\r\n                this._nextTickChange(this.numberValue);\r\n            } else {\r\n                this.$emit('keydown', e);\r\n            }\r\n        },\r\n        /**\r\n         * Convert an input string as floating-point number.\r\n         *\r\n         * @param {string} value The value to convert\r\n         * @returns {number} The converted value\r\n         * @private\r\n         */\r\n        _parseValue(value) {\r\n            if (Helper.isEmpty(value)) {\r\n                this.localValue = null;\r\n                return null;\r\n            }\r\n\r\n            let strValue = value.toString();\r\n            const posComma = strValue.indexOf(',');\r\n            const posDot = strValue.indexOf('.');\r\n\r\n            if (posComma > -1 && posDot > -1) {\r\n                if (posComma > posDot) {\r\n                    strValue = strValue.replace(/\\./g, '').replace(/,/g, '.');\r\n                } else {\r\n                    strValue = strValue.replace(/,/g, '');\r\n                }\r\n            } else if (posComma > -1) {\r\n                const values = strValue.split(',');\r\n\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                } else {\r\n                    strValue = values.join('.');\r\n                }\r\n            } else if (posDot > -1) {\r\n                const values = strValue.split('.');\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                }\r\n            }\r\n\r\n            const floatValue = parseFloat(strValue);\r\n            this.invalidNumber = isNaN(floatValue);\r\n            this.localValue = floatValue;\r\n\r\n            return floatValue;\r\n        },\r\n        /**\r\n         * Update input field value and fire input events.\r\n         *\r\n         * @param {string|number} value the input value\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateValue(value) {\r\n            this.numberValue = this._parseValue(value);\r\n            this.$emit('input', this.numberValue);\r\n            this._nextTickChange(this.numberValue);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField"}]}