{"remainingRequest":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsTextField.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsTextField.vue","mtime":1609324257000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chiara\\Desktop\\WA-Projekt\\wa-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvQ2hpYXJhL0Rlc2t0b3AvV0EtUHJvamVrdC93YS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmxhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IEZvbnRBd2Vzb21lSWNvbiB9IGZyb20gIkBmb3J0YXdlc29tZS92dWUtZm9udGF3ZXNvbWUiOwppbXBvcnQgQnNJY29uIGZyb20gIi4uL0JzSWNvbi9Cc0ljb24iOwppbXBvcnQgQnNJY29uVG9nZ2xlIGZyb20gIi4uL0JzSWNvbi9Cc0ljb25Ub2dnbGUiOwppbXBvcnQgSW5wdXQgZnJvbSAiLi4vLi4vbWl4aW5zL0lucHV0IjsKaW1wb3J0IFRleHRGaWVsZCBmcm9tICIuL21peGlucy9UZXh0RmllbGQiOwppbXBvcnQgRmllbGRWYWxpZGF0aW9uIGZyb20gIi4vbWl4aW5zL0ZpZWxkVmFsaWRhdGlvbiI7CmltcG9ydCAiLi4vLi4vLi4vc2Nzcy9fZmllbGQuc2NzcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQnNUZXh0RmllbGQiLAogIGNvbXBvbmVudHM6IHsKICAgIEZvbnRBd2Vzb21lSWNvbjogRm9udEF3ZXNvbWVJY29uLAogICAgQnNJY29uOiBCc0ljb24sCiAgICBCc0ljb25Ub2dnbGU6IEJzSWNvblRvZ2dsZQogIH0sCiAgbWl4aW5zOiBbSW5wdXQsIFRleHRGaWVsZCwgRmllbGRWYWxpZGF0aW9uXSwKICBwcm9wczogewogICAgLyoqDQogICAgICogU2V0cyA8aW5wdXQ+IGVsZW1lbnQgdHlwZSBhdHRyaWJ1dGUuIFZhbGlkIHZhbHVlcyBhcmU6IGB0ZXh0YCwgYHBhc3N3b3JkYCwgYGVtYWlsYCwgYHVybGAsIGB0ZWxgLg0KICAgICAqIEB0eXBlIHtzdHJpbmd8Kn0NCiAgICAgKi8KICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICd0ZXh0JywKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IodikgewogICAgICAgIHJldHVybiBbJ3RleHQnLCAnZW1haWwnLCAncGFzc3dvcmQnLCAndGVsJywgJ3VybCcsICdyYW5nZSddLmluZGV4T2YodikgPiAtMTsKICAgICAgfQogICAgfSwKCiAgICAvKioNCiAgICAgKiBFbmFibGUgdG9nZ2xlIHBhc3N3b3JkIGZpZWxkLg0KICAgICAqIEB0eXBlIHtib29sZWFufCp9DQogICAgICovCiAgICBwYXNzd29yZFRvZ2dsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICAiZGVmYXVsdCI6IHRydWUKICAgIH0sCgogICAgLyoqDQogICAgICogU2V0cyBgPGlucHV0PmAgZWxlbWVudCBtYXhpbXVtIGNoYXJhY3RlcnMgYWxsb3dlZC4NCiAgICAgKiBAdHlwZSB7c3RyaW5nfG51bWJlcnwqfQ0KICAgICAqLwogICAgbWF4bGVuZ3RoOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgICJkZWZhdWx0IjogdW5kZWZpbmVkCiAgICB9LAoKICAgIC8qKg0KICAgICAqIFNldHMgYDxpbnB1dD5gIGVsZW1lbnQgbWluaW11bSBjaGFyYWN0ZXJzIGFsbG93ZWQuDQogICAgICogQHR5cGUge3N0cmluZ3xudW1iZXJ8Kn0NCiAgICAgKi8KICAgIG1pbmxlbmd0aDogewogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgICAiZGVmYXVsdCI6IHVuZGVmaW5lZAogICAgfSwKCiAgICAvKioNCiAgICAgKiBTZXRzIHRhcmdldCBgPGRhdGFsaXN0PmAgZWxlbWVudCBJRC4NCiAgICAgKiBAdHlwZSB7c3RyaW5nfCp9DQogICAgICovCiAgICBkYXRhbGlzdDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogdW5kZWZpbmVkCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNQYXNzd29yZFRvZ2dsZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8qKg0KICAgICAqIEdldCBjb21wdXRlZCBjb21wb25lbnQncyBjbGFzcyBuYW1lcy4NCiAgICAgKg0KICAgICAqIEByZXR1cm5zIHtPYmplY3R8Kn0gQ29sbGVjdGlvbiBvZiBjc3MgY2xhc3Nlcw0KICAgICAqIEBwcml2YXRlDQogICAgICovCiAgICBfY2xhc3NOYW1lczogZnVuY3Rpb24gX2NsYXNzTmFtZXMoKSB7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMuY21wQXR0ckNsYXNzZXMpLCB7fSwgewogICAgICAgICdtZC1maWVsZC1mbGF0JzogdGhpcy5mbGF0LAogICAgICAgICdtZC1maWVsZC1maWxsZWQnOiB0aGlzLmZpbGxlZCwKICAgICAgICAnbWQtZmllbGQtb3V0bGluZWQnOiB0aGlzLm91dGxpbmVkLAogICAgICAgICdtZC1mbG9hdGluZy1sYWJlbCc6IHRoaXMuZmxvYXRpbmdMYWJlbCwKICAgICAgICAnbWQtZm9jdXNlZCc6IHRoaXMuaXNGb2N1c2VkLAogICAgICAgICdoYXMtZXJyb3InOiB0aGlzLmhhc1ZhbGlkYXRpb25FcnJvciwKICAgICAgICAnaGFzLXN1Y2Nlc3MnOiB0aGlzLmhhc1ZhbGlkYXRlZCAmJiAhdGhpcy5oYXNWYWxpZGF0aW9uRXJyb3IKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIEdldCBpbnB1dCBmaWVsZCBjb21wdXRlZCBiaW5kaW5nJ3MgYXR0cmlidXRlcy4NCiAgICAgKg0KICAgICAqIEByZXR1cm5zIHtPYmplY3R8Kn0gQXR0cmlidXRlcyB0byBiaW5kDQogICAgICovCiAgICBhdHRyaWJ1dGVzOiBmdW5jdGlvbiBhdHRyaWJ1dGVzKCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMuY21wQXR0cnMpLCB0aGlzLmZpZWxkQXR0cnMpLCB7fSwgewogICAgICAgICd0eXBlJzogdGhpcy5maWVsZFR5cGUsCiAgICAgICAgJ2xpc3QnOiB0aGlzLmRhdGFsaXN0LAogICAgICAgICdtYXhsZW5ndGgnOiB0aGlzLm1heGxlbmd0aCwKICAgICAgICAnbWlubGVuZ3RoJzogdGhpcy5taW5sZW5ndGgKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIEdldCBjb21wdXRlZCBpbnB1dCBmaWVsZCB0eXBlLg0KICAgICAqDQogICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIGlucHV0IGZpZWxkIHR5cGUNCiAgICAgKi8KICAgIGZpZWxkVHlwZTogZnVuY3Rpb24gZmllbGRUeXBlKCkgewogICAgICBpZiAodGhpcy5oYXNQYXNzd29yZFRvZ2dsZSkgewogICAgICAgIHJldHVybiB0aGlzLmlzUGFzc3dvcmRUb2dnbGVkID8gJ3RleHQnIDogJ3Bhc3N3b3JkJzsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMudHlwZTsKICAgIH0sCgogICAgLyoqDQogICAgICogQ2hlY2sgaWYgZmVhdHVyZSBwYXNzd29yZCB0b2dnbGUgaXMgZW5hYmxlZCBvciBub3QuDQogICAgICoNCiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVFJVRSBpZiBpbnB1dCBmaWVsZCB0eXBlIGlzIHBhc3N3b3JkIGFuZCB0b2dnbGUgZmVhdHVyZSBpcyBlbmFibGVkDQogICAgICovCiAgICBoYXNQYXNzd29yZFRvZ2dsZTogZnVuY3Rpb24gaGFzUGFzc3dvcmRUb2dnbGUoKSB7CiAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09ICdwYXNzd29yZCcgJiYgdGhpcy5wYXNzd29yZFRvZ2dsZTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuX3VwZGF0ZUxhYmVsKCk7CgogICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICBpZiAoX3RoaXMuYXV0b2ZvY3VzICYmIF90aGlzLiRyZWZzLmlucHV0KSB7CiAgICAgICAgX3RoaXMuJHJlZnMuaW5wdXQuZm9jdXMoKTsKICAgICAgfQoKICAgICAgX3RoaXMuX3VwZGF0ZUxlZ2VuZCgpOyAvLyB0aGlzLl9zZXRGbG9hdGluZ0xhYmVsUG9zaXRpb24oKTsKCiAgICB9KTsKICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUobmV3VmFsKSB7CiAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IG5ld1ZhbDsKCiAgICAgIHRoaXMuX3VwZGF0ZUxlZ2VuZChuZXdWYWwpOyAvLyB0aGlzLl9zZXRGbG9hdGluZ0xhYmVsUG9zaXRpb24oKTsKCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["BsTextField.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-field row\">\r\n    <slot v-if=\"floatingLabel === false\" v-bind=\"{ id }\" />\r\n    <div class=\"md-field-wrapper\">\r\n      <div\r\n        v-if=\"prependIconOuter\"\r\n        class=\"md-prepend-icon\">\r\n        <slot name=\"prependIconOuter\">\r\n          <font-awesome-icon :icon=\"prependIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n      <div class=\"md-field-ctrl\">\r\n        <div class=\"md-field-inner\">\r\n          <fieldset\r\n            v-if=\"outlined\"\r\n            aria-hidden=\"true\">\r\n            <legend ref=\"legend\">\r\n              <span>​</span>\r\n            </legend>\r\n          </fieldset>\r\n          <div\r\n            v-if=\"prependIcon\"\r\n            class=\"md-prepend-icon\">\r\n            <slot name=\"prependIcon\">\r\n              <font-awesome-icon :icon=\"prependIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n          <div class=\"md-field-input-wrapper\">\r\n            <div\r\n              v-if=\"floatingLabel\"\r\n              ref=\"floatLabel\"\r\n              :class=\"floatingLabelClass\"\r\n              class=\"md-field-label\">\r\n              <slot v-bind=\"{ id }\" />\r\n            </div>\r\n            <input\r\n              ref=\"input\"\r\n              v-bind=\"attributes\"\r\n              role=\"textbox\"\r\n              @blur=\"_onBlur\"\r\n              @focus=\"_onFocus\"\r\n              @input=\"_updateValue($event.target.value)\"\r\n              @keydown=\"_onKeyDown\" />\r\n          </div>\r\n          <transition name=\"fade\">\r\n            <div\r\n              v-if=\"hasPasswordToggle || hasClearButton\"\r\n              class=\"md-action-icon\">\r\n              <bs-icon\r\n                v-if=\"hasClearButton\"\r\n                icon=\"clear\"\r\n                height=\"24\"\r\n                @click=\"clearValue\" />\r\n              <bs-icon-toggle\r\n                v-if=\"hasPasswordToggle\"\r\n                v-model=\"isPasswordToggled\"\r\n                icon=\"eye\"\r\n                toggle-icon=\"eye-slash\" />\r\n            </div>\r\n          </transition>\r\n          <div\r\n            v-if=\"appendIcon\"\r\n            class=\"md-append-icon\">\r\n            <slot name=\"appendIcon\">\r\n              <font-awesome-icon :icon=\"appendIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"helpText || showErrorValidation\"\r\n          class=\"md-help-text\">\r\n          <transition name=\"fade\">\r\n            <slot name=\"helpText\">\r\n              <small\r\n                v-if=\"showHelpText\"\r\n                class=\"text-muted d-block\">\r\n                {{ helpText }}\r\n              </small>\r\n            </slot>\r\n          </transition>\r\n          <template v-if=\"hasValidationError\">\r\n            <small\r\n              v-for=\"(fld) in errorItems\"\r\n              :key=\"fld\"\r\n              class=\"text-danger d-block\">\r\n              {{ _validationMessage(fld) }}\r\n            </small>\r\n          </template>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"appendIconOuter\"\r\n        class=\"md-append-icon\">\r\n        <slot name=\"appendIconOuter\">\r\n          <font-awesome-icon :icon=\"appendIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport BsIconToggle from \"../BsIcon/BsIconToggle\";\r\nimport Input from \"../../mixins/Input\";\r\nimport TextField from \"./mixins/TextField\";\r\nimport FieldValidation from \"./mixins/FieldValidation\";\r\nimport \"../../../scss/_field.scss\"\r\n\r\nexport default {\r\n    name: \"BsTextField\",\r\n    components: {FontAwesomeIcon, BsIcon, BsIconToggle},\r\n    mixins: [Input, TextField, FieldValidation],\r\n    props: {\r\n        /**\r\n         * Sets <input> element type attribute. Valid values are: `text`, `password`, `email`, `url`, `tel`.\r\n         * @type {string|*}\r\n         */\r\n        type: {\r\n            type: String,\r\n            default: 'text',\r\n            validator: v => ['text', 'email', 'password', 'tel', 'url', 'range'].indexOf(v) > -1\r\n        },\r\n        /**\r\n         * Enable toggle password field.\r\n         * @type {boolean|*}\r\n         */\r\n        passwordToggle: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * Sets `<input>` element maximum characters allowed.\r\n         * @type {string|number|*}\r\n         */\r\n        maxlength: {\r\n            type: [String, Number],\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Sets `<input>` element minimum characters allowed.\r\n         * @type {string|number|*}\r\n         */\r\n        minlength: {\r\n            type: [String, Number],\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Sets target `<datalist>` element ID.\r\n         * @type {string|*}\r\n         */\r\n        datalist: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n    },\r\n    data: () => ({\r\n        isPasswordToggled: false,\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} Collection of css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this.cmpAttrClasses,\r\n                'md-field-flat': this.flat,\r\n                'md-field-filled': this.filled,\r\n                'md-field-outlined': this.outlined,\r\n                'md-floating-label': this.floatingLabel,\r\n                'md-focused': this.isFocused,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.hasValidated && !this.hasValidationError\r\n            }\r\n        },\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} Attributes to bind\r\n         */\r\n        attributes() {\r\n            return {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'type': this.fieldType,\r\n                'list': this.datalist,\r\n                'maxlength': this.maxlength,\r\n                'minlength': this.minlength\r\n            }\r\n        },\r\n        /**\r\n         * Get computed input field type.\r\n         *\r\n         * @returns {string} The input field type\r\n         */\r\n        fieldType() {\r\n            if (this.hasPasswordToggle) {\r\n                return this.isPasswordToggled ? 'text' : 'password';\r\n            }\r\n\r\n            return this.type;\r\n        },\r\n        /**\r\n         * Check if feature password toggle is enabled or not.\r\n         *\r\n         * @returns {boolean} TRUE if input field type is password and toggle feature is enabled\r\n         */\r\n        hasPasswordToggle() {\r\n            return this.type === 'password' && this.passwordToggle;\r\n        }\r\n    },\r\n    mounted() {\r\n        this._updateLabel();\r\n        this.$nextTick(() => {\r\n            if (this.autofocus && this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            this._updateLegend();\r\n            // this._setFloatingLabelPosition();\r\n        });\r\n    },\r\n    watch: {\r\n        value(newVal) {\r\n            this.localValue = newVal;\r\n            this._updateLegend(newVal);\r\n            // this._setFloatingLabelPosition();\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField"}]}